ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Timer_initVar
  18              		.bss
  19              		.type	Timer_initVar, %object
  20              		.size	Timer_initVar, 1
  21              	Timer_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.Timer_Init,"ax",%progbits
  24              		.align	2
  25              		.global	Timer_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	Timer_Init, %function
  29              	Timer_Init:
  30              	.LFB2:
  31              		.file 1 "Generated_Source\\PSoC4\\Timer.c"
   1:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:Generated_Source\PSoC4/Timer.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer.c **** *
   5:Generated_Source\PSoC4/Timer.c **** * Description:
   6:Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:Generated_Source\PSoC4/Timer.c **** *  component
   8:Generated_Source\PSoC4/Timer.c **** *
   9:Generated_Source\PSoC4/Timer.c **** * Note:
  10:Generated_Source\PSoC4/Timer.c **** *  None
  11:Generated_Source\PSoC4/Timer.c **** *
  12:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer.c **** 
  19:Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:Generated_Source\PSoC4/Timer.c **** 
  21:Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  22:Generated_Source\PSoC4/Timer.c **** 
  23:Generated_Source\PSoC4/Timer.c **** 
  24:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  26:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 2


  27:Generated_Source\PSoC4/Timer.c **** *
  28:Generated_Source\PSoC4/Timer.c **** * Summary:
  29:Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  30:Generated_Source\PSoC4/Timer.c **** *
  31:Generated_Source\PSoC4/Timer.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer.c **** *  None
  33:Generated_Source\PSoC4/Timer.c **** *
  34:Generated_Source\PSoC4/Timer.c **** * Return:
  35:Generated_Source\PSoC4/Timer.c **** *  None
  36:Generated_Source\PSoC4/Timer.c **** *
  37:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  39:Generated_Source\PSoC4/Timer.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/Timer.c **** 
  41:Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  43:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer.c ****         
  45:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer.c **** 
  48:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer.c ****         
  51:Generated_Source\PSoC4/Timer.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer.c ****         Timer_SetCounterMode(Timer_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCounter(Timer_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  56:Generated_Source\PSoC4/Timer.c **** 
  57:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  58:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_TIMER_BASE_CONFIG;
  40              		.loc 1 58 0
  41 0004 0A4B     		ldr	r3, .L2
  42 0006 0B4A     		ldr	r2, .L2+4
  43 0008 1A60     		str	r2, [r3]
  59:Generated_Source\PSoC4/Timer.c ****         
  60:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_TIMER_SIGNALS_MODES;
  44              		.loc 1 61 0
  45 000a 0B4B     		ldr	r3, .L2+8
  46 000c 0C22     		mov	r2, #12
  47 000e 1A60     		str	r2, [r3]
  62:Generated_Source\PSoC4/Timer.c ****     
  63:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
  48              		.loc 1 64 0
  49 0010 0320     		mov	r0, #3
  50 0012 FFF7FEFF 		bl	Timer_SetInterruptMode
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 3


  65:Generated_Source\PSoC4/Timer.c ****         
  66:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
  51              		.loc 1 67 0
  52 0016 FA23     		mov	r3, #250
  53 0018 9B00     		lsl	r3, r3, #2
  54 001a 181C     		mov	r0, r3
  55 001c FFF7FEFF 		bl	Timer_WritePeriod
  68:Generated_Source\PSoC4/Timer.c **** 
  69:Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer.c **** 
  72:Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer.c **** 
  78:Generated_Source\PSoC4/Timer.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer.c ****         #if (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer.c ****         #elif(Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE);
  56              		.loc 1 82 0
  57 0020 FA23     		mov	r3, #250
  58 0022 9B00     		lsl	r3, r3, #2
  59 0024 181C     		mov	r0, r3
  60 0026 FFF7FEFF 		bl	Timer_WriteCounter
  83:Generated_Source\PSoC4/Timer.c ****         #else
  84:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(0u);
  85:Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  87:Generated_Source\PSoC4/Timer.c **** 
  88:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  89:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer.c **** 
  91:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  92:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer.c ****         #else
  95:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_ALIGN | Timer_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/Timer.c ****             
  97:Generated_Source\PSoC4/Timer.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer.c ****             #if (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer.c ****             #elif (Timer__RIGHT == Timer_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer.c ****             #else 
 103:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer.c **** 
 107:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
 108:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer.c **** 
 111:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 4


 112:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer.c **** 
 115:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer.c ****     
 118:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer.c **** 
 121:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 123:Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer.c ****         #else
 128:Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer.c **** 
 132:Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer.c **** 
 136:Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
 137:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer.c **** 
 140:Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer.c **** 
 145:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer.c **** 
 149:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer.c **** 
 154:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 159:Generated_Source\PSoC4/Timer.c ****     
 160:Generated_Source\PSoC4/Timer.c **** }
  61              		.loc 1 160 0
  62 002a BD46     		mov	sp, r7
  63              		@ sp needed
  64 002c 80BD     		pop	{r7, pc}
  65              	.L3:
  66 002e C046     		.align	2
  67              	.L2:
  68 0030 00012040 		.word	1075839232
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 5


  69 0034 00000102 		.word	33619968
  70 0038 24012040 		.word	1075839268
  71              		.cfi_endproc
  72              	.LFE2:
  73              		.size	Timer_Init, .-Timer_Init
  74              		.section	.text.Timer_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	Timer_Enable
  77              		.code	16
  78              		.thumb_func
  79              		.type	Timer_Enable, %function
  80              	Timer_Enable:
  81              	.LFB3:
 161:Generated_Source\PSoC4/Timer.c **** 
 162:Generated_Source\PSoC4/Timer.c **** 
 163:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 165:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer.c **** *
 167:Generated_Source\PSoC4/Timer.c **** * Summary:
 168:Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 169:Generated_Source\PSoC4/Timer.c **** *
 170:Generated_Source\PSoC4/Timer.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer.c **** *  None
 172:Generated_Source\PSoC4/Timer.c **** *
 173:Generated_Source\PSoC4/Timer.c **** * Return:
 174:Generated_Source\PSoC4/Timer.c **** *  None
 175:Generated_Source\PSoC4/Timer.c **** *
 176:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 178:Generated_Source\PSoC4/Timer.c **** {
  82              		.loc 1 178 0
  83              		.cfi_startproc
  84 0000 90B5     		push	{r4, r7, lr}
  85              		.cfi_def_cfa_offset 12
  86              		.cfi_offset 4, -12
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              		.cfi_def_cfa_offset 24
  91 0004 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer.c **** 
 181:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
  93              		.loc 1 181 0
  94 0006 FC1D     		add	r4, r7, #7
  95 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  96 000c 031C     		mov	r3, r0
  97 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
  98              		.loc 1 182 0
  99 0010 084B     		ldr	r3, .L5
 100 0012 084A     		ldr	r2, .L5
 101 0014 1268     		ldr	r2, [r2]
 102 0016 0121     		mov	r1, #1
 103 0018 0A43     		orr	r2, r1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 6


 104 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 105              		.loc 1 183 0
 106 001c FB1D     		add	r3, r7, #7
 107 001e 1B78     		ldrb	r3, [r3]
 108 0020 181C     		mov	r0, r3
 109 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/Timer.c **** 
 185:Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 187:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 189:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
 191:Generated_Source\PSoC4/Timer.c **** 
 192:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 193:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 110              		.loc 1 194 0
 111 0026 0120     		mov	r0, #1
 112 0028 1821     		mov	r1, #24
 113 002a FFF7FEFF 		bl	Timer_TriggerCommand
 195:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 197:Generated_Source\PSoC4/Timer.c ****     
 198:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
 199:Generated_Source\PSoC4/Timer.c ****         #if (0u != Timer_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u != Timer_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
 203:Generated_Source\PSoC4/Timer.c **** }
 114              		.loc 1 203 0
 115 002e BD46     		mov	sp, r7
 116 0030 03B0     		add	sp, sp, #12
 117              		@ sp needed
 118 0032 90BD     		pop	{r4, r7, pc}
 119              	.L6:
 120              		.align	2
 121              	.L5:
 122 0034 00002040 		.word	1075838976
 123              		.cfi_endproc
 124              	.LFE3:
 125              		.size	Timer_Enable, .-Timer_Enable
 126              		.section	.text.Timer_Start,"ax",%progbits
 127              		.align	2
 128              		.global	Timer_Start
 129              		.code	16
 130              		.thumb_func
 131              		.type	Timer_Start, %function
 132              	Timer_Start:
 133              	.LFB4:
 204:Generated_Source\PSoC4/Timer.c **** 
 205:Generated_Source\PSoC4/Timer.c **** 
 206:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
 208:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 7


 210:Generated_Source\PSoC4/Timer.c **** * Summary:
 211:Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 212:Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 213:Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer.c **** *
 216:Generated_Source\PSoC4/Timer.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer.c **** *  None
 218:Generated_Source\PSoC4/Timer.c **** *
 219:Generated_Source\PSoC4/Timer.c **** * Return:
 220:Generated_Source\PSoC4/Timer.c **** *  None
 221:Generated_Source\PSoC4/Timer.c **** *
 222:Generated_Source\PSoC4/Timer.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 228:Generated_Source\PSoC4/Timer.c **** *
 229:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 231:Generated_Source\PSoC4/Timer.c **** {
 134              		.loc 1 231 0
 135              		.cfi_startproc
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 142              		.loc 1 232 0
 143 0004 064B     		ldr	r3, .L9
 144 0006 1B78     		ldrb	r3, [r3]
 145 0008 002B     		cmp	r3, #0
 146 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/Timer.c ****     {
 234:Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 147              		.loc 1 234 0
 148 000c FFF7FEFF 		bl	Timer_Init
 235:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 149              		.loc 1 235 0
 150 0010 034B     		ldr	r3, .L9
 151 0012 0122     		mov	r2, #1
 152 0014 1A70     		strb	r2, [r3]
 153              	.L8:
 236:Generated_Source\PSoC4/Timer.c ****     }
 237:Generated_Source\PSoC4/Timer.c **** 
 238:Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 154              		.loc 1 238 0
 155 0016 FFF7FEFF 		bl	Timer_Enable
 239:Generated_Source\PSoC4/Timer.c **** }
 156              		.loc 1 239 0
 157 001a BD46     		mov	sp, r7
 158              		@ sp needed
 159 001c 80BD     		pop	{r7, pc}
 160              	.L10:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 8


 161 001e C046     		.align	2
 162              	.L9:
 163 0020 00000000 		.word	Timer_initVar
 164              		.cfi_endproc
 165              	.LFE4:
 166              		.size	Timer_Start, .-Timer_Start
 167              		.section	.text.Timer_Stop,"ax",%progbits
 168              		.align	2
 169              		.global	Timer_Stop
 170              		.code	16
 171              		.thumb_func
 172              		.type	Timer_Stop, %function
 173              	Timer_Stop:
 174              	.LFB5:
 240:Generated_Source\PSoC4/Timer.c **** 
 241:Generated_Source\PSoC4/Timer.c **** 
 242:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 244:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer.c **** *
 246:Generated_Source\PSoC4/Timer.c **** * Summary:
 247:Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 248:Generated_Source\PSoC4/Timer.c **** *
 249:Generated_Source\PSoC4/Timer.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer.c **** *  None
 251:Generated_Source\PSoC4/Timer.c **** *
 252:Generated_Source\PSoC4/Timer.c **** * Return:
 253:Generated_Source\PSoC4/Timer.c **** *  None
 254:Generated_Source\PSoC4/Timer.c **** *
 255:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 257:Generated_Source\PSoC4/Timer.c **** {
 175              		.loc 1 257 0
 176              		.cfi_startproc
 177 0000 90B5     		push	{r4, r7, lr}
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer.c **** 
 260:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 186              		.loc 1 260 0
 187 0006 FC1D     		add	r4, r7, #7
 188 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 189 000c 031C     		mov	r3, r0
 190 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/Timer.c **** 
 262:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 191              		.loc 1 262 0
 192 0010 064B     		ldr	r3, .L12
 193 0012 064A     		ldr	r2, .L12
 194 0014 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 9


 195 0016 0121     		mov	r1, #1
 196 0018 8A43     		bic	r2, r1
 197 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/Timer.c **** 
 264:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 264 0
 199 001c FB1D     		add	r3, r7, #7
 200 001e 1B78     		ldrb	r3, [r3]
 201 0020 181C     		mov	r0, r3
 202 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/Timer.c **** }
 203              		.loc 1 265 0
 204 0026 BD46     		mov	sp, r7
 205 0028 03B0     		add	sp, sp, #12
 206              		@ sp needed
 207 002a 90BD     		pop	{r4, r7, pc}
 208              	.L13:
 209              		.align	2
 210              	.L12:
 211 002c 00002040 		.word	1075838976
 212              		.cfi_endproc
 213              	.LFE5:
 214              		.size	Timer_Stop, .-Timer_Stop
 215              		.section	.text.Timer_SetMode,"ax",%progbits
 216              		.align	2
 217              		.global	Timer_SetMode
 218              		.code	16
 219              		.thumb_func
 220              		.type	Timer_SetMode, %function
 221              	Timer_SetMode:
 222              	.LFB6:
 266:Generated_Source\PSoC4/Timer.c **** 
 267:Generated_Source\PSoC4/Timer.c **** 
 268:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 270:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer.c **** *
 272:Generated_Source\PSoC4/Timer.c **** * Summary:
 273:Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 274:Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer.c **** *
 277:Generated_Source\PSoC4/Timer.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 279:Generated_Source\PSoC4/Timer.c **** *   Values:
 280:Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer.c **** *
 289:Generated_Source\PSoC4/Timer.c **** * Return:
 290:Generated_Source\PSoC4/Timer.c **** *  None
 291:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 10


 292:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer.c **** {
 223              		.loc 1 294 0
 224              		.cfi_startproc
 225 0000 90B5     		push	{r4, r7, lr}
 226              		.cfi_def_cfa_offset 12
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 85B0     		sub	sp, sp, #20
 231              		.cfi_def_cfa_offset 32
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer.c **** 
 297:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 235              		.loc 1 297 0
 236 0008 0F23     		mov	r3, #15
 237 000a FC18     		add	r4, r7, r3
 238 000c FFF7FEFF 		bl	CyEnterCriticalSection
 239 0010 031C     		mov	r3, r0
 240 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/Timer.c **** 
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 241              		.loc 1 299 0
 242 0014 0A4B     		ldr	r3, .L15
 243 0016 0A4A     		ldr	r2, .L15
 244 0018 1268     		ldr	r2, [r2]
 245 001a 0A49     		ldr	r1, .L15+4
 246 001c 0A40     		and	r2, r1
 247 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 248              		.loc 1 300 0
 249 0020 074B     		ldr	r3, .L15
 250 0022 074A     		ldr	r2, .L15
 251 0024 1168     		ldr	r1, [r2]
 252 0026 7A68     		ldr	r2, [r7, #4]
 253 0028 0A43     		orr	r2, r1
 254 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/Timer.c **** 
 302:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 255              		.loc 1 302 0
 256 002c 0F23     		mov	r3, #15
 257 002e FB18     		add	r3, r7, r3
 258 0030 1B78     		ldrb	r3, [r3]
 259 0032 181C     		mov	r0, r3
 260 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/Timer.c **** }
 261              		.loc 1 303 0
 262 0038 BD46     		mov	sp, r7
 263 003a 05B0     		add	sp, sp, #20
 264              		@ sp needed
 265 003c 90BD     		pop	{r4, r7, pc}
 266              	.L16:
 267 003e C046     		.align	2
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 11


 268              	.L15:
 269 0040 00012040 		.word	1075839232
 270 0044 FFFFFFF8 		.word	-117440513
 271              		.cfi_endproc
 272              	.LFE6:
 273              		.size	Timer_SetMode, .-Timer_SetMode
 274              		.section	.text.Timer_SetQDMode,"ax",%progbits
 275              		.align	2
 276              		.global	Timer_SetQDMode
 277              		.code	16
 278              		.thumb_func
 279              		.type	Timer_SetQDMode, %function
 280              	Timer_SetQDMode:
 281              	.LFB7:
 304:Generated_Source\PSoC4/Timer.c **** 
 305:Generated_Source\PSoC4/Timer.c **** 
 306:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
 308:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer.c **** *
 310:Generated_Source\PSoC4/Timer.c **** * Summary:
 311:Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer.c **** *
 314:Generated_Source\PSoC4/Timer.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer.c **** *   Values:
 317:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer.c **** *
 322:Generated_Source\PSoC4/Timer.c **** * Return:
 323:Generated_Source\PSoC4/Timer.c **** *  None
 324:Generated_Source\PSoC4/Timer.c **** *
 325:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer.c **** {
 282              		.loc 1 327 0
 283              		.cfi_startproc
 284 0000 90B5     		push	{r4, r7, lr}
 285              		.cfi_def_cfa_offset 12
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 85B0     		sub	sp, sp, #20
 290              		.cfi_def_cfa_offset 32
 291 0004 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer.c **** 
 330:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 294              		.loc 1 330 0
 295 0008 0F23     		mov	r3, #15
 296 000a FC18     		add	r4, r7, r3
 297 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 12


 298 0010 031C     		mov	r3, r0
 299 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/Timer.c **** 
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 300              		.loc 1 332 0
 301 0014 0A4B     		ldr	r3, .L18
 302 0016 0A4A     		ldr	r2, .L18
 303 0018 1268     		ldr	r2, [r2]
 304 001a 0A49     		ldr	r1, .L18+4
 305 001c 0A40     		and	r2, r1
 306 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 307              		.loc 1 333 0
 308 0020 074B     		ldr	r3, .L18
 309 0022 074A     		ldr	r2, .L18
 310 0024 1168     		ldr	r1, [r2]
 311 0026 7A68     		ldr	r2, [r7, #4]
 312 0028 0A43     		orr	r2, r1
 313 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/Timer.c **** 
 335:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 314              		.loc 1 335 0
 315 002c 0F23     		mov	r3, #15
 316 002e FB18     		add	r3, r7, r3
 317 0030 1B78     		ldrb	r3, [r3]
 318 0032 181C     		mov	r0, r3
 319 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/Timer.c **** }
 320              		.loc 1 336 0
 321 0038 BD46     		mov	sp, r7
 322 003a 05B0     		add	sp, sp, #20
 323              		@ sp needed
 324 003c 90BD     		pop	{r4, r7, pc}
 325              	.L19:
 326 003e C046     		.align	2
 327              	.L18:
 328 0040 00012040 		.word	1075839232
 329 0044 FFFF8FFF 		.word	-7340033
 330              		.cfi_endproc
 331              	.LFE7:
 332              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 333              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 334              		.align	2
 335              		.global	Timer_SetPrescaler
 336              		.code	16
 337              		.thumb_func
 338              		.type	Timer_SetPrescaler, %function
 339              	Timer_SetPrescaler:
 340              	.LFB8:
 337:Generated_Source\PSoC4/Timer.c **** 
 338:Generated_Source\PSoC4/Timer.c **** 
 339:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 341:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer.c **** *
 343:Generated_Source\PSoC4/Timer.c **** * Summary:
 344:Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 13


 345:Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer.c **** *
 347:Generated_Source\PSoC4/Timer.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer.c **** *   Values:
 350:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer.c **** *
 359:Generated_Source\PSoC4/Timer.c **** * Return:
 360:Generated_Source\PSoC4/Timer.c **** *  None
 361:Generated_Source\PSoC4/Timer.c **** *
 362:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer.c **** {
 341              		.loc 1 364 0
 342              		.cfi_startproc
 343 0000 90B5     		push	{r4, r7, lr}
 344              		.cfi_def_cfa_offset 12
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 85B0     		sub	sp, sp, #20
 349              		.cfi_def_cfa_offset 32
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 352 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/Timer.c **** 
 367:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 353              		.loc 1 367 0
 354 0008 0F23     		mov	r3, #15
 355 000a FC18     		add	r4, r7, r3
 356 000c FFF7FEFF 		bl	CyEnterCriticalSection
 357 0010 031C     		mov	r3, r0
 358 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/Timer.c **** 
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 359              		.loc 1 369 0
 360 0014 0A4B     		ldr	r3, .L21
 361 0016 0A4A     		ldr	r2, .L21
 362 0018 1268     		ldr	r2, [r2]
 363 001a 0A49     		ldr	r1, .L21+4
 364 001c 0A40     		and	r2, r1
 365 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 366              		.loc 1 370 0
 367 0020 074B     		ldr	r3, .L21
 368 0022 074A     		ldr	r2, .L21
 369 0024 1168     		ldr	r1, [r2]
 370 0026 7A68     		ldr	r2, [r7, #4]
 371 0028 0A43     		orr	r2, r1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 14


 372 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/Timer.c **** 
 372:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 373              		.loc 1 372 0
 374 002c 0F23     		mov	r3, #15
 375 002e FB18     		add	r3, r7, r3
 376 0030 1B78     		ldrb	r3, [r3]
 377 0032 181C     		mov	r0, r3
 378 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/Timer.c **** }
 379              		.loc 1 373 0
 380 0038 BD46     		mov	sp, r7
 381 003a 05B0     		add	sp, sp, #20
 382              		@ sp needed
 383 003c 90BD     		pop	{r4, r7, pc}
 384              	.L22:
 385 003e C046     		.align	2
 386              	.L21:
 387 0040 00012040 		.word	1075839232
 388 0044 FF00FFFF 		.word	-65281
 389              		.cfi_endproc
 390              	.LFE8:
 391              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
 392              		.section	.text.Timer_SetOneShot,"ax",%progbits
 393              		.align	2
 394              		.global	Timer_SetOneShot
 395              		.code	16
 396              		.thumb_func
 397              		.type	Timer_SetOneShot, %function
 398              	Timer_SetOneShot:
 399              	.LFB9:
 374:Generated_Source\PSoC4/Timer.c **** 
 375:Generated_Source\PSoC4/Timer.c **** 
 376:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 378:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer.c **** *
 380:Generated_Source\PSoC4/Timer.c **** * Summary:
 381:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 382:Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer.c **** *
 385:Generated_Source\PSoC4/Timer.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer.c **** *   Values:
 388:Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer.c **** *
 391:Generated_Source\PSoC4/Timer.c **** * Return:
 392:Generated_Source\PSoC4/Timer.c **** *  None
 393:Generated_Source\PSoC4/Timer.c **** *
 394:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer.c **** {
 400              		.loc 1 396 0
 401              		.cfi_startproc
 402 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 15


 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 85B0     		sub	sp, sp, #20
 408              		.cfi_def_cfa_offset 32
 409 0004 00AF     		add	r7, sp, #0
 410              		.cfi_def_cfa_register 7
 411 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer.c **** 
 399:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 412              		.loc 1 399 0
 413 0008 0F23     		mov	r3, #15
 414 000a FC18     		add	r4, r7, r3
 415 000c FFF7FEFF 		bl	CyEnterCriticalSection
 416 0010 031C     		mov	r3, r0
 417 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/Timer.c **** 
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 418              		.loc 1 401 0
 419 0014 0B4B     		ldr	r3, .L24
 420 0016 0B4A     		ldr	r2, .L24
 421 0018 1268     		ldr	r2, [r2]
 422 001a 0B49     		ldr	r1, .L24+4
 423 001c 0A40     		and	r2, r1
 424 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 425              		.loc 1 402 0
 426 0020 084B     		ldr	r3, .L24
 427 0022 084A     		ldr	r2, .L24
 428 0024 1168     		ldr	r1, [r2]
 429 0026 7A68     		ldr	r2, [r7, #4]
 430 0028 0120     		mov	r0, #1
 431 002a 0240     		and	r2, r0
 432 002c 9204     		lsl	r2, r2, #18
 433 002e 0A43     		orr	r2, r1
 434 0030 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer.c **** 
 405:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 435              		.loc 1 405 0
 436 0032 0F23     		mov	r3, #15
 437 0034 FB18     		add	r3, r7, r3
 438 0036 1B78     		ldrb	r3, [r3]
 439 0038 181C     		mov	r0, r3
 440 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/Timer.c **** }
 441              		.loc 1 406 0
 442 003e BD46     		mov	sp, r7
 443 0040 05B0     		add	sp, sp, #20
 444              		@ sp needed
 445 0042 90BD     		pop	{r4, r7, pc}
 446              	.L25:
 447              		.align	2
 448              	.L24:
 449 0044 00012040 		.word	1075839232
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 16


 450 0048 FFFFFBFF 		.word	-262145
 451              		.cfi_endproc
 452              	.LFE9:
 453              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 454              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 455              		.align	2
 456              		.global	Timer_SetPWMMode
 457              		.code	16
 458              		.thumb_func
 459              		.type	Timer_SetPWMMode, %function
 460              	Timer_SetPWMMode:
 461              	.LFB10:
 407:Generated_Source\PSoC4/Timer.c **** 
 408:Generated_Source\PSoC4/Timer.c **** 
 409:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 411:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer.c **** *
 413:Generated_Source\PSoC4/Timer.c **** * Summary:
 414:Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer.c **** *
 420:Generated_Source\PSoC4/Timer.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer.c **** *   Values:
 424:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer.c **** *
 445:Generated_Source\PSoC4/Timer.c **** * Return:
 446:Generated_Source\PSoC4/Timer.c **** *  None
 447:Generated_Source\PSoC4/Timer.c **** *
 448:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer.c **** {
 462              		.loc 1 450 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 17


 463              		.cfi_startproc
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 82B0     		sub	sp, sp, #8
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 472 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 473              		.loc 1 451 0
 474 0008 034B     		ldr	r3, .L27
 475 000a 7A68     		ldr	r2, [r7, #4]
 476 000c 3F21     		mov	r1, #63
 477 000e 0A40     		and	r2, r1
 478 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/Timer.c **** }
 479              		.loc 1 452 0
 480 0012 BD46     		mov	sp, r7
 481 0014 02B0     		add	sp, sp, #8
 482              		@ sp needed
 483 0016 80BD     		pop	{r7, pc}
 484              	.L28:
 485              		.align	2
 486              	.L27:
 487 0018 28012040 		.word	1075839272
 488              		.cfi_endproc
 489              	.LFE10:
 490              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 491              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 492              		.align	2
 493              		.global	Timer_SetPWMSyncKill
 494              		.code	16
 495              		.thumb_func
 496              		.type	Timer_SetPWMSyncKill, %function
 497              	Timer_SetPWMSyncKill:
 498              	.LFB11:
 453:Generated_Source\PSoC4/Timer.c **** 
 454:Generated_Source\PSoC4/Timer.c **** 
 455:Generated_Source\PSoC4/Timer.c **** 
 456:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer.c **** *
 460:Generated_Source\PSoC4/Timer.c **** * Summary:
 461:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer.c **** *
 466:Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer.c **** *
 469:Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 18


 472:Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer.c **** 
 474:Generated_Source\PSoC4/Timer.c **** *
 475:Generated_Source\PSoC4/Timer.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer.c **** *   Values:
 478:Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer.c **** *
 481:Generated_Source\PSoC4/Timer.c **** * Return:
 482:Generated_Source\PSoC4/Timer.c **** *  None
 483:Generated_Source\PSoC4/Timer.c **** *
 484:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer.c **** {
 499              		.loc 1 486 0
 500              		.cfi_startproc
 501 0000 90B5     		push	{r4, r7, lr}
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 85B0     		sub	sp, sp, #20
 507              		.cfi_def_cfa_offset 32
 508 0004 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 510 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer.c **** 
 489:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 511              		.loc 1 489 0
 512 0008 0F23     		mov	r3, #15
 513 000a FC18     		add	r4, r7, r3
 514 000c FFF7FEFF 		bl	CyEnterCriticalSection
 515 0010 031C     		mov	r3, r0
 516 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/Timer.c **** 
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 517              		.loc 1 491 0
 518 0014 0B4B     		ldr	r3, .L30
 519 0016 0B4A     		ldr	r2, .L30
 520 0018 1268     		ldr	r2, [r2]
 521 001a 0421     		mov	r1, #4
 522 001c 8A43     		bic	r2, r1
 523 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 524              		.loc 1 492 0
 525 0020 084B     		ldr	r3, .L30
 526 0022 084A     		ldr	r2, .L30
 527 0024 1168     		ldr	r1, [r2]
 528 0026 7A68     		ldr	r2, [r7, #4]
 529 0028 0120     		mov	r0, #1
 530 002a 0240     		and	r2, r0
 531 002c 9200     		lsl	r2, r2, #2
 532 002e 0A43     		orr	r2, r1
 533 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 19


 494:Generated_Source\PSoC4/Timer.c **** 
 495:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 534              		.loc 1 495 0
 535 0032 0F23     		mov	r3, #15
 536 0034 FB18     		add	r3, r7, r3
 537 0036 1B78     		ldrb	r3, [r3]
 538 0038 181C     		mov	r0, r3
 539 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/Timer.c **** }
 540              		.loc 1 496 0
 541 003e BD46     		mov	sp, r7
 542 0040 05B0     		add	sp, sp, #20
 543              		@ sp needed
 544 0042 90BD     		pop	{r4, r7, pc}
 545              	.L31:
 546              		.align	2
 547              	.L30:
 548 0044 00012040 		.word	1075839232
 549              		.cfi_endproc
 550              	.LFE11:
 551              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 552              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 553              		.align	2
 554              		.global	Timer_SetPWMStopOnKill
 555              		.code	16
 556              		.thumb_func
 557              		.type	Timer_SetPWMStopOnKill, %function
 558              	Timer_SetPWMStopOnKill:
 559              	.LFB12:
 497:Generated_Source\PSoC4/Timer.c **** 
 498:Generated_Source\PSoC4/Timer.c **** 
 499:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer.c **** *
 503:Generated_Source\PSoC4/Timer.c **** * Summary:
 504:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer.c **** *
 508:Generated_Source\PSoC4/Timer.c **** *
 509:Generated_Source\PSoC4/Timer.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer.c **** *   Values:
 512:Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer.c **** *
 515:Generated_Source\PSoC4/Timer.c **** * Return:
 516:Generated_Source\PSoC4/Timer.c **** *  None
 517:Generated_Source\PSoC4/Timer.c **** *
 518:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer.c **** {
 560              		.loc 1 520 0
 561              		.cfi_startproc
 562 0000 90B5     		push	{r4, r7, lr}
 563              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 20


 564              		.cfi_offset 4, -12
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 85B0     		sub	sp, sp, #20
 568              		.cfi_def_cfa_offset 32
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer.c **** 
 523:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 572              		.loc 1 523 0
 573 0008 0F23     		mov	r3, #15
 574 000a FC18     		add	r4, r7, r3
 575 000c FFF7FEFF 		bl	CyEnterCriticalSection
 576 0010 031C     		mov	r3, r0
 577 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/Timer.c **** 
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 578              		.loc 1 525 0
 579 0014 0B4B     		ldr	r3, .L33
 580 0016 0B4A     		ldr	r2, .L33
 581 0018 1268     		ldr	r2, [r2]
 582 001a 0821     		mov	r1, #8
 583 001c 8A43     		bic	r2, r1
 584 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 585              		.loc 1 526 0
 586 0020 084B     		ldr	r3, .L33
 587 0022 084A     		ldr	r2, .L33
 588 0024 1168     		ldr	r1, [r2]
 589 0026 7A68     		ldr	r2, [r7, #4]
 590 0028 0120     		mov	r0, #1
 591 002a 0240     		and	r2, r0
 592 002c D200     		lsl	r2, r2, #3
 593 002e 0A43     		orr	r2, r1
 594 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer.c **** 
 529:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 595              		.loc 1 529 0
 596 0032 0F23     		mov	r3, #15
 597 0034 FB18     		add	r3, r7, r3
 598 0036 1B78     		ldrb	r3, [r3]
 599 0038 181C     		mov	r0, r3
 600 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/Timer.c **** }
 601              		.loc 1 530 0
 602 003e BD46     		mov	sp, r7
 603 0040 05B0     		add	sp, sp, #20
 604              		@ sp needed
 605 0042 90BD     		pop	{r4, r7, pc}
 606              	.L34:
 607              		.align	2
 608              	.L33:
 609 0044 00012040 		.word	1075839232
 610              		.cfi_endproc
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 21


 611              	.LFE12:
 612              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 613              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 614              		.align	2
 615              		.global	Timer_SetPWMDeadTime
 616              		.code	16
 617              		.thumb_func
 618              		.type	Timer_SetPWMDeadTime, %function
 619              	Timer_SetPWMDeadTime:
 620              	.LFB13:
 531:Generated_Source\PSoC4/Timer.c **** 
 532:Generated_Source\PSoC4/Timer.c **** 
 533:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer.c **** *
 537:Generated_Source\PSoC4/Timer.c **** * Summary:
 538:Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer.c **** 
 543:Generated_Source\PSoC4/Timer.c **** *
 544:Generated_Source\PSoC4/Timer.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/Timer.c **** *
 548:Generated_Source\PSoC4/Timer.c **** * Return:
 549:Generated_Source\PSoC4/Timer.c **** *  None
 550:Generated_Source\PSoC4/Timer.c **** *
 551:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer.c **** {
 621              		.loc 1 553 0
 622              		.cfi_startproc
 623 0000 90B5     		push	{r4, r7, lr}
 624              		.cfi_def_cfa_offset 12
 625              		.cfi_offset 4, -12
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
 628 0002 85B0     		sub	sp, sp, #20
 629              		.cfi_def_cfa_offset 32
 630 0004 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 632 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer.c **** 
 556:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 633              		.loc 1 556 0
 634 0008 0F23     		mov	r3, #15
 635 000a FC18     		add	r4, r7, r3
 636 000c FFF7FEFF 		bl	CyEnterCriticalSection
 637 0010 031C     		mov	r3, r0
 638 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/Timer.c **** 
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 639              		.loc 1 558 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 22


 640 0014 0B4B     		ldr	r3, .L36
 641 0016 0B4A     		ldr	r2, .L36
 642 0018 1268     		ldr	r2, [r2]
 643 001a 0B49     		ldr	r1, .L36+4
 644 001c 0A40     		and	r2, r1
 645 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 646              		.loc 1 559 0
 647 0020 084B     		ldr	r3, .L36
 648 0022 084A     		ldr	r2, .L36
 649 0024 1168     		ldr	r1, [r2]
 650 0026 7A68     		ldr	r2, [r7, #4]
 651 0028 1202     		lsl	r2, r2, #8
 652 002a 1204     		lsl	r2, r2, #16
 653 002c 120C     		lsr	r2, r2, #16
 654 002e 0A43     		orr	r2, r1
 655 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer.c **** 
 562:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 656              		.loc 1 562 0
 657 0032 0F23     		mov	r3, #15
 658 0034 FB18     		add	r3, r7, r3
 659 0036 1B78     		ldrb	r3, [r3]
 660 0038 181C     		mov	r0, r3
 661 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/Timer.c **** }
 662              		.loc 1 563 0
 663 003e BD46     		mov	sp, r7
 664 0040 05B0     		add	sp, sp, #20
 665              		@ sp needed
 666 0042 90BD     		pop	{r4, r7, pc}
 667              	.L37:
 668              		.align	2
 669              	.L36:
 670 0044 00012040 		.word	1075839232
 671 0048 FF00FFFF 		.word	-65281
 672              		.cfi_endproc
 673              	.LFE13:
 674              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
 675              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 676              		.align	2
 677              		.global	Timer_SetPWMInvert
 678              		.code	16
 679              		.thumb_func
 680              		.type	Timer_SetPWMInvert, %function
 681              	Timer_SetPWMInvert:
 682              	.LFB14:
 564:Generated_Source\PSoC4/Timer.c **** 
 565:Generated_Source\PSoC4/Timer.c **** 
 566:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 568:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer.c **** *
 570:Generated_Source\PSoC4/Timer.c **** * Summary:
 571:Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 23


 573:Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer.c **** *
 575:Generated_Source\PSoC4/Timer.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer.c **** *   Values:
 578:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer.c **** *
 581:Generated_Source\PSoC4/Timer.c **** * Return:
 582:Generated_Source\PSoC4/Timer.c **** *  None
 583:Generated_Source\PSoC4/Timer.c **** *
 584:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer.c **** {
 683              		.loc 1 586 0
 684              		.cfi_startproc
 685 0000 90B5     		push	{r4, r7, lr}
 686              		.cfi_def_cfa_offset 12
 687              		.cfi_offset 4, -12
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 85B0     		sub	sp, sp, #20
 691              		.cfi_def_cfa_offset 32
 692 0004 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer.c **** 
 589:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 695              		.loc 1 589 0
 696 0008 0F23     		mov	r3, #15
 697 000a FC18     		add	r4, r7, r3
 698 000c FFF7FEFF 		bl	CyEnterCriticalSection
 699 0010 031C     		mov	r3, r0
 700 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/Timer.c **** 
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 701              		.loc 1 591 0
 702 0014 0A4B     		ldr	r3, .L39
 703 0016 0A4A     		ldr	r2, .L39
 704 0018 1268     		ldr	r2, [r2]
 705 001a 0A49     		ldr	r1, .L39+4
 706 001c 0A40     		and	r2, r1
 707 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 708              		.loc 1 592 0
 709 0020 074B     		ldr	r3, .L39
 710 0022 074A     		ldr	r2, .L39
 711 0024 1168     		ldr	r1, [r2]
 712 0026 7A68     		ldr	r2, [r7, #4]
 713 0028 0A43     		orr	r2, r1
 714 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/Timer.c **** 
 594:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 715              		.loc 1 594 0
 716 002c 0F23     		mov	r3, #15
 717 002e FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 24


 718 0030 1B78     		ldrb	r3, [r3]
 719 0032 181C     		mov	r0, r3
 720 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/Timer.c **** }
 721              		.loc 1 595 0
 722 0038 BD46     		mov	sp, r7
 723 003a 05B0     		add	sp, sp, #20
 724              		@ sp needed
 725 003c 90BD     		pop	{r4, r7, pc}
 726              	.L40:
 727 003e C046     		.align	2
 728              	.L39:
 729 0040 00012040 		.word	1075839232
 730 0044 FFFFCFFF 		.word	-3145729
 731              		.cfi_endproc
 732              	.LFE14:
 733              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 734              		.section	.text.Timer_WriteCounter,"ax",%progbits
 735              		.align	2
 736              		.global	Timer_WriteCounter
 737              		.code	16
 738              		.thumb_func
 739              		.type	Timer_WriteCounter, %function
 740              	Timer_WriteCounter:
 741              	.LFB15:
 596:Generated_Source\PSoC4/Timer.c **** 
 597:Generated_Source\PSoC4/Timer.c **** 
 598:Generated_Source\PSoC4/Timer.c **** 
 599:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 601:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer.c **** *
 603:Generated_Source\PSoC4/Timer.c **** * Summary:
 604:Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer.c **** *
 608:Generated_Source\PSoC4/Timer.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer.c **** *
 611:Generated_Source\PSoC4/Timer.c **** * Return:
 612:Generated_Source\PSoC4/Timer.c **** *  None
 613:Generated_Source\PSoC4/Timer.c **** *
 614:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer.c **** {
 742              		.loc 1 616 0
 743              		.cfi_startproc
 744 0000 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 82B0     		sub	sp, sp, #8
 749              		.cfi_def_cfa_offset 16
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 25


 617:Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 753              		.loc 1 617 0
 754 0008 034B     		ldr	r3, .L42
 755 000a 7A68     		ldr	r2, [r7, #4]
 756 000c 1204     		lsl	r2, r2, #16
 757 000e 120C     		lsr	r2, r2, #16
 758 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/Timer.c **** }
 759              		.loc 1 618 0
 760 0012 BD46     		mov	sp, r7
 761 0014 02B0     		add	sp, sp, #8
 762              		@ sp needed
 763 0016 80BD     		pop	{r7, pc}
 764              	.L43:
 765              		.align	2
 766              	.L42:
 767 0018 08012040 		.word	1075839240
 768              		.cfi_endproc
 769              	.LFE15:
 770              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 771              		.section	.text.Timer_ReadCounter,"ax",%progbits
 772              		.align	2
 773              		.global	Timer_ReadCounter
 774              		.code	16
 775              		.thumb_func
 776              		.type	Timer_ReadCounter, %function
 777              	Timer_ReadCounter:
 778              	.LFB16:
 619:Generated_Source\PSoC4/Timer.c **** 
 620:Generated_Source\PSoC4/Timer.c **** 
 621:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 623:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer.c **** *
 625:Generated_Source\PSoC4/Timer.c **** * Summary:
 626:Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer.c **** *
 628:Generated_Source\PSoC4/Timer.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer.c **** *  None
 630:Generated_Source\PSoC4/Timer.c **** *
 631:Generated_Source\PSoC4/Timer.c **** * Return:
 632:Generated_Source\PSoC4/Timer.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer.c **** *
 634:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer.c **** {
 779              		.loc 1 636 0
 780              		.cfi_startproc
 781 0000 80B5     		push	{r7, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 787              		.loc 1 637 0
 788 0004 034B     		ldr	r3, .L46
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 26


 789 0006 1B68     		ldr	r3, [r3]
 790 0008 1B04     		lsl	r3, r3, #16
 791 000a 1B0C     		lsr	r3, r3, #16
 638:Generated_Source\PSoC4/Timer.c **** }
 792              		.loc 1 638 0
 793 000c 181C     		mov	r0, r3
 794 000e BD46     		mov	sp, r7
 795              		@ sp needed
 796 0010 80BD     		pop	{r7, pc}
 797              	.L47:
 798 0012 C046     		.align	2
 799              	.L46:
 800 0014 08012040 		.word	1075839240
 801              		.cfi_endproc
 802              	.LFE16:
 803              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 804              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 805              		.align	2
 806              		.global	Timer_SetCounterMode
 807              		.code	16
 808              		.thumb_func
 809              		.type	Timer_SetCounterMode, %function
 810              	Timer_SetCounterMode:
 811              	.LFB17:
 639:Generated_Source\PSoC4/Timer.c **** 
 640:Generated_Source\PSoC4/Timer.c **** 
 641:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 643:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer.c **** *
 645:Generated_Source\PSoC4/Timer.c **** * Summary:
 646:Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer.c **** *
 649:Generated_Source\PSoC4/Timer.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer.c **** *   Values:
 652:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer.c **** *
 660:Generated_Source\PSoC4/Timer.c **** * Return:
 661:Generated_Source\PSoC4/Timer.c **** *  None
 662:Generated_Source\PSoC4/Timer.c **** *
 663:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer.c **** {
 812              		.loc 1 665 0
 813              		.cfi_startproc
 814 0000 90B5     		push	{r4, r7, lr}
 815              		.cfi_def_cfa_offset 12
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 7, -8
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 27


 818              		.cfi_offset 14, -4
 819 0002 85B0     		sub	sp, sp, #20
 820              		.cfi_def_cfa_offset 32
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 823 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer.c **** 
 668:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 824              		.loc 1 668 0
 825 0008 0F23     		mov	r3, #15
 826 000a FC18     		add	r4, r7, r3
 827 000c FFF7FEFF 		bl	CyEnterCriticalSection
 828 0010 031C     		mov	r3, r0
 829 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/Timer.c **** 
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 830              		.loc 1 670 0
 831 0014 0A4B     		ldr	r3, .L49
 832 0016 0A4A     		ldr	r2, .L49
 833 0018 1268     		ldr	r2, [r2]
 834 001a 0A49     		ldr	r1, .L49+4
 835 001c 0A40     		and	r2, r1
 836 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 837              		.loc 1 671 0
 838 0020 074B     		ldr	r3, .L49
 839 0022 074A     		ldr	r2, .L49
 840 0024 1168     		ldr	r1, [r2]
 841 0026 7A68     		ldr	r2, [r7, #4]
 842 0028 0A43     		orr	r2, r1
 843 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/Timer.c **** 
 673:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 844              		.loc 1 673 0
 845 002c 0F23     		mov	r3, #15
 846 002e FB18     		add	r3, r7, r3
 847 0030 1B78     		ldrb	r3, [r3]
 848 0032 181C     		mov	r0, r3
 849 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/Timer.c **** }
 850              		.loc 1 674 0
 851 0038 BD46     		mov	sp, r7
 852 003a 05B0     		add	sp, sp, #20
 853              		@ sp needed
 854 003c 90BD     		pop	{r4, r7, pc}
 855              	.L50:
 856 003e C046     		.align	2
 857              	.L49:
 858 0040 00012040 		.word	1075839232
 859 0044 FFFFFCFF 		.word	-196609
 860              		.cfi_endproc
 861              	.LFE17:
 862              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 863              		.section	.text.Timer_WritePeriod,"ax",%progbits
 864              		.align	2
 865              		.global	Timer_WritePeriod
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 28


 866              		.code	16
 867              		.thumb_func
 868              		.type	Timer_WritePeriod, %function
 869              	Timer_WritePeriod:
 870              	.LFB18:
 675:Generated_Source\PSoC4/Timer.c **** 
 676:Generated_Source\PSoC4/Timer.c **** 
 677:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 679:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer.c **** *
 681:Generated_Source\PSoC4/Timer.c **** * Summary:
 682:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer.c **** *
 686:Generated_Source\PSoC4/Timer.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer.c **** *
 689:Generated_Source\PSoC4/Timer.c **** * Return:
 690:Generated_Source\PSoC4/Timer.c **** *  None
 691:Generated_Source\PSoC4/Timer.c **** *
 692:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer.c **** {
 871              		.loc 1 694 0
 872              		.cfi_startproc
 873 0000 80B5     		push	{r7, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 7, -8
 876              		.cfi_offset 14, -4
 877 0002 82B0     		sub	sp, sp, #8
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
 881 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 882              		.loc 1 695 0
 883 0008 034B     		ldr	r3, .L52
 884 000a 7A68     		ldr	r2, [r7, #4]
 885 000c 1204     		lsl	r2, r2, #16
 886 000e 120C     		lsr	r2, r2, #16
 887 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/Timer.c **** }
 888              		.loc 1 696 0
 889 0012 BD46     		mov	sp, r7
 890 0014 02B0     		add	sp, sp, #8
 891              		@ sp needed
 892 0016 80BD     		pop	{r7, pc}
 893              	.L53:
 894              		.align	2
 895              	.L52:
 896 0018 14012040 		.word	1075839252
 897              		.cfi_endproc
 898              	.LFE18:
 899              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 900              		.section	.text.Timer_ReadPeriod,"ax",%progbits
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 29


 901              		.align	2
 902              		.global	Timer_ReadPeriod
 903              		.code	16
 904              		.thumb_func
 905              		.type	Timer_ReadPeriod, %function
 906              	Timer_ReadPeriod:
 907              	.LFB19:
 697:Generated_Source\PSoC4/Timer.c **** 
 698:Generated_Source\PSoC4/Timer.c **** 
 699:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 701:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer.c **** *
 703:Generated_Source\PSoC4/Timer.c **** * Summary:
 704:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer.c **** *
 706:Generated_Source\PSoC4/Timer.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer.c **** *  None
 708:Generated_Source\PSoC4/Timer.c **** *
 709:Generated_Source\PSoC4/Timer.c **** * Return:
 710:Generated_Source\PSoC4/Timer.c **** *  Period value
 711:Generated_Source\PSoC4/Timer.c **** *
 712:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer.c **** {
 908              		.loc 1 714 0
 909              		.cfi_startproc
 910 0000 80B5     		push	{r7, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 916              		.loc 1 715 0
 917 0004 034B     		ldr	r3, .L56
 918 0006 1B68     		ldr	r3, [r3]
 919 0008 1B04     		lsl	r3, r3, #16
 920 000a 1B0C     		lsr	r3, r3, #16
 716:Generated_Source\PSoC4/Timer.c **** }
 921              		.loc 1 716 0
 922 000c 181C     		mov	r0, r3
 923 000e BD46     		mov	sp, r7
 924              		@ sp needed
 925 0010 80BD     		pop	{r7, pc}
 926              	.L57:
 927 0012 C046     		.align	2
 928              	.L56:
 929 0014 14012040 		.word	1075839252
 930              		.cfi_endproc
 931              	.LFE19:
 932              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 933              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 934              		.align	2
 935              		.global	Timer_SetCompareSwap
 936              		.code	16
 937              		.thumb_func
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 30


 938              		.type	Timer_SetCompareSwap, %function
 939              	Timer_SetCompareSwap:
 940              	.LFB20:
 717:Generated_Source\PSoC4/Timer.c **** 
 718:Generated_Source\PSoC4/Timer.c **** 
 719:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 721:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer.c **** *
 723:Generated_Source\PSoC4/Timer.c **** * Summary:
 724:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer.c **** *
 729:Generated_Source\PSoC4/Timer.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer.c **** *   Values:
 732:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer.c **** *
 735:Generated_Source\PSoC4/Timer.c **** * Return:
 736:Generated_Source\PSoC4/Timer.c **** *  None
 737:Generated_Source\PSoC4/Timer.c **** *
 738:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer.c **** {
 941              		.loc 1 740 0
 942              		.cfi_startproc
 943 0000 90B5     		push	{r4, r7, lr}
 944              		.cfi_def_cfa_offset 12
 945              		.cfi_offset 4, -12
 946              		.cfi_offset 7, -8
 947              		.cfi_offset 14, -4
 948 0002 85B0     		sub	sp, sp, #20
 949              		.cfi_def_cfa_offset 32
 950 0004 00AF     		add	r7, sp, #0
 951              		.cfi_def_cfa_register 7
 952 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer.c **** 
 743:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 953              		.loc 1 743 0
 954 0008 0F23     		mov	r3, #15
 955 000a FC18     		add	r4, r7, r3
 956 000c FFF7FEFF 		bl	CyEnterCriticalSection
 957 0010 031C     		mov	r3, r0
 958 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/Timer.c **** 
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 959              		.loc 1 745 0
 960 0014 0B4B     		ldr	r3, .L59
 961 0016 0B4A     		ldr	r2, .L59
 962 0018 1268     		ldr	r2, [r2]
 963 001a 0121     		mov	r1, #1
 964 001c 8A43     		bic	r2, r1
 965 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 31


 746:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 966              		.loc 1 746 0
 967 0020 084B     		ldr	r3, .L59
 968 0022 084A     		ldr	r2, .L59
 969 0024 1168     		ldr	r1, [r2]
 970 0026 7A68     		ldr	r2, [r7, #4]
 971 0028 0120     		mov	r0, #1
 972 002a 0240     		and	r2, r0
 973 002c 0A43     		orr	r2, r1
 974 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/Timer.c **** 
 748:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 975              		.loc 1 748 0
 976 0030 0F23     		mov	r3, #15
 977 0032 FB18     		add	r3, r7, r3
 978 0034 1B78     		ldrb	r3, [r3]
 979 0036 181C     		mov	r0, r3
 980 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/Timer.c **** }
 981              		.loc 1 749 0
 982 003c BD46     		mov	sp, r7
 983 003e 05B0     		add	sp, sp, #20
 984              		@ sp needed
 985 0040 90BD     		pop	{r4, r7, pc}
 986              	.L60:
 987 0042 C046     		.align	2
 988              	.L59:
 989 0044 00012040 		.word	1075839232
 990              		.cfi_endproc
 991              	.LFE20:
 992              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 993              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 994              		.align	2
 995              		.global	Timer_WritePeriodBuf
 996              		.code	16
 997              		.thumb_func
 998              		.type	Timer_WritePeriodBuf, %function
 999              	Timer_WritePeriodBuf:
 1000              	.LFB21:
 750:Generated_Source\PSoC4/Timer.c **** 
 751:Generated_Source\PSoC4/Timer.c **** 
 752:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer.c **** *
 756:Generated_Source\PSoC4/Timer.c **** * Summary:
 757:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer.c **** *
 759:Generated_Source\PSoC4/Timer.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer.c **** *
 762:Generated_Source\PSoC4/Timer.c **** * Return:
 763:Generated_Source\PSoC4/Timer.c **** *  None
 764:Generated_Source\PSoC4/Timer.c **** *
 765:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 32


 1001              		.loc 1 767 0
 1002              		.cfi_startproc
 1003 0000 80B5     		push	{r7, lr}
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 82B0     		sub	sp, sp, #8
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 1012              		.loc 1 768 0
 1013 0008 034B     		ldr	r3, .L62
 1014 000a 7A68     		ldr	r2, [r7, #4]
 1015 000c 1204     		lsl	r2, r2, #16
 1016 000e 120C     		lsr	r2, r2, #16
 1017 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/Timer.c **** }
 1018              		.loc 1 769 0
 1019 0012 BD46     		mov	sp, r7
 1020 0014 02B0     		add	sp, sp, #8
 1021              		@ sp needed
 1022 0016 80BD     		pop	{r7, pc}
 1023              	.L63:
 1024              		.align	2
 1025              	.L62:
 1026 0018 18012040 		.word	1075839256
 1027              		.cfi_endproc
 1028              	.LFE21:
 1029              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 1030              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 1031              		.align	2
 1032              		.global	Timer_ReadPeriodBuf
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	Timer_ReadPeriodBuf, %function
 1036              	Timer_ReadPeriodBuf:
 1037              	.LFB22:
 770:Generated_Source\PSoC4/Timer.c **** 
 771:Generated_Source\PSoC4/Timer.c **** 
 772:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer.c **** *
 776:Generated_Source\PSoC4/Timer.c **** * Summary:
 777:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer.c **** *
 779:Generated_Source\PSoC4/Timer.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer.c **** *  None
 781:Generated_Source\PSoC4/Timer.c **** *
 782:Generated_Source\PSoC4/Timer.c **** * Return:
 783:Generated_Source\PSoC4/Timer.c **** *  Period value
 784:Generated_Source\PSoC4/Timer.c **** *
 785:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 33


 1038              		.loc 1 787 0
 1039              		.cfi_startproc
 1040 0000 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 1046              		.loc 1 788 0
 1047 0004 034B     		ldr	r3, .L66
 1048 0006 1B68     		ldr	r3, [r3]
 1049 0008 1B04     		lsl	r3, r3, #16
 1050 000a 1B0C     		lsr	r3, r3, #16
 789:Generated_Source\PSoC4/Timer.c **** }
 1051              		.loc 1 789 0
 1052 000c 181C     		mov	r0, r3
 1053 000e BD46     		mov	sp, r7
 1054              		@ sp needed
 1055 0010 80BD     		pop	{r7, pc}
 1056              	.L67:
 1057 0012 C046     		.align	2
 1058              	.L66:
 1059 0014 18012040 		.word	1075839256
 1060              		.cfi_endproc
 1061              	.LFE22:
 1062              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 1063              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 1064              		.align	2
 1065              		.global	Timer_SetPeriodSwap
 1066              		.code	16
 1067              		.thumb_func
 1068              		.type	Timer_SetPeriodSwap, %function
 1069              	Timer_SetPeriodSwap:
 1070              	.LFB23:
 790:Generated_Source\PSoC4/Timer.c **** 
 791:Generated_Source\PSoC4/Timer.c **** 
 792:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer.c **** *
 796:Generated_Source\PSoC4/Timer.c **** * Summary:
 797:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer.c **** *
 802:Generated_Source\PSoC4/Timer.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer.c **** *   Values:
 805:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer.c **** *
 808:Generated_Source\PSoC4/Timer.c **** * Return:
 809:Generated_Source\PSoC4/Timer.c **** *  None
 810:Generated_Source\PSoC4/Timer.c **** *
 811:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 34


 812:Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer.c **** {
 1071              		.loc 1 813 0
 1072              		.cfi_startproc
 1073 0000 90B5     		push	{r4, r7, lr}
 1074              		.cfi_def_cfa_offset 12
 1075              		.cfi_offset 4, -12
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 85B0     		sub	sp, sp, #20
 1079              		.cfi_def_cfa_offset 32
 1080 0004 00AF     		add	r7, sp, #0
 1081              		.cfi_def_cfa_register 7
 1082 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer.c **** 
 816:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1083              		.loc 1 816 0
 1084 0008 0F23     		mov	r3, #15
 1085 000a FC18     		add	r4, r7, r3
 1086 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1087 0010 031C     		mov	r3, r0
 1088 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/Timer.c **** 
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 1089              		.loc 1 818 0
 1090 0014 0B4B     		ldr	r3, .L69
 1091 0016 0B4A     		ldr	r2, .L69
 1092 0018 1268     		ldr	r2, [r2]
 1093 001a 0221     		mov	r1, #2
 1094 001c 8A43     		bic	r2, r1
 1095 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 1096              		.loc 1 819 0
 1097 0020 084B     		ldr	r3, .L69
 1098 0022 084A     		ldr	r2, .L69
 1099 0024 1168     		ldr	r1, [r2]
 1100 0026 7A68     		ldr	r2, [r7, #4]
 1101 0028 0120     		mov	r0, #1
 1102 002a 0240     		and	r2, r0
 1103 002c 5200     		lsl	r2, r2, #1
 1104 002e 0A43     		orr	r2, r1
 1105 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer.c **** 
 822:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1106              		.loc 1 822 0
 1107 0032 0F23     		mov	r3, #15
 1108 0034 FB18     		add	r3, r7, r3
 1109 0036 1B78     		ldrb	r3, [r3]
 1110 0038 181C     		mov	r0, r3
 1111 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/Timer.c **** }
 1112              		.loc 1 823 0
 1113 003e BD46     		mov	sp, r7
 1114 0040 05B0     		add	sp, sp, #20
 1115              		@ sp needed
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 35


 1116 0042 90BD     		pop	{r4, r7, pc}
 1117              	.L70:
 1118              		.align	2
 1119              	.L69:
 1120 0044 00012040 		.word	1075839232
 1121              		.cfi_endproc
 1122              	.LFE23:
 1123              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 1124              		.section	.text.Timer_WriteCompare,"ax",%progbits
 1125              		.align	2
 1126              		.global	Timer_WriteCompare
 1127              		.code	16
 1128              		.thumb_func
 1129              		.type	Timer_WriteCompare, %function
 1130              	Timer_WriteCompare:
 1131              	.LFB24:
 824:Generated_Source\PSoC4/Timer.c **** 
 825:Generated_Source\PSoC4/Timer.c **** 
 826:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 828:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer.c **** *
 830:Generated_Source\PSoC4/Timer.c **** * Summary:
 831:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer.c **** *
 834:Generated_Source\PSoC4/Timer.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer.c **** *
 837:Generated_Source\PSoC4/Timer.c **** * Return:
 838:Generated_Source\PSoC4/Timer.c **** *  None
 839:Generated_Source\PSoC4/Timer.c **** *
 840:Generated_Source\PSoC4/Timer.c **** * Note:
 841:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer.c **** *
 848:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer.c **** {
 1132              		.loc 1 850 0
 1133              		.cfi_startproc
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 82B0     		sub	sp, sp, #8
 1139              		.cfi_def_cfa_offset 16
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 36


 854:Generated_Source\PSoC4/Timer.c **** 
 855:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/Timer.c **** 
 858:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer.c ****         {
 860:Generated_Source\PSoC4/Timer.c ****             compare++;
 861:Generated_Source\PSoC4/Timer.c ****         }
 862:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer.c ****         {
 864:Generated_Source\PSoC4/Timer.c ****             compare--;
 865:Generated_Source\PSoC4/Timer.c ****         }
 866:Generated_Source\PSoC4/Timer.c ****         else
 867:Generated_Source\PSoC4/Timer.c ****         {
 868:Generated_Source\PSoC4/Timer.c ****         }
 869:Generated_Source\PSoC4/Timer.c ****         
 870:Generated_Source\PSoC4/Timer.c ****     
 871:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer.c ****     
 873:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 1143              		.loc 1 873 0
 1144 0008 034B     		ldr	r3, .L72
 1145 000a 7A68     		ldr	r2, [r7, #4]
 1146 000c 1204     		lsl	r2, r2, #16
 1147 000e 120C     		lsr	r2, r2, #16
 1148 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/Timer.c **** }
 1149              		.loc 1 874 0
 1150 0012 BD46     		mov	sp, r7
 1151 0014 02B0     		add	sp, sp, #8
 1152              		@ sp needed
 1153 0016 80BD     		pop	{r7, pc}
 1154              	.L73:
 1155              		.align	2
 1156              	.L72:
 1157 0018 0C012040 		.word	1075839244
 1158              		.cfi_endproc
 1159              	.LFE24:
 1160              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 1161              		.section	.text.Timer_ReadCompare,"ax",%progbits
 1162              		.align	2
 1163              		.global	Timer_ReadCompare
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	Timer_ReadCompare, %function
 1167              	Timer_ReadCompare:
 1168              	.LFB25:
 875:Generated_Source\PSoC4/Timer.c **** 
 876:Generated_Source\PSoC4/Timer.c **** 
 877:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
 879:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer.c **** *
 881:Generated_Source\PSoC4/Timer.c **** * Summary:
 882:Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 37


 885:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer.c **** *
 888:Generated_Source\PSoC4/Timer.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer.c **** *  None
 890:Generated_Source\PSoC4/Timer.c **** *
 891:Generated_Source\PSoC4/Timer.c **** * Return:
 892:Generated_Source\PSoC4/Timer.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer.c **** *
 894:Generated_Source\PSoC4/Timer.c **** * Note:
 895:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer.c **** *
 899:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer.c **** {
 1169              		.loc 1 901 0
 1170              		.cfi_startproc
 1171 0000 80B5     		push	{r7, lr}
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 7, -8
 1174              		.cfi_offset 14, -4
 1175 0002 00AF     		add	r7, sp, #0
 1176              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer.c **** 
 907:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/Timer.c ****         
 910:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer.c ****         
 912:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer.c ****         {
 914:Generated_Source\PSoC4/Timer.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer.c ****         }
 916:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer.c ****         {
 918:Generated_Source\PSoC4/Timer.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer.c ****         }
 920:Generated_Source\PSoC4/Timer.c ****         else
 921:Generated_Source\PSoC4/Timer.c ****         {
 922:Generated_Source\PSoC4/Timer.c ****         }
 923:Generated_Source\PSoC4/Timer.c **** 
 924:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer.c ****     #else
 926:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 1177              		.loc 1 926 0
 1178 0004 034B     		ldr	r3, .L76
 1179 0006 1B68     		ldr	r3, [r3]
 1180 0008 1B04     		lsl	r3, r3, #16
 1181 000a 1B0C     		lsr	r3, r3, #16
 927:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 38


 1182              		.loc 1 928 0
 1183 000c 181C     		mov	r0, r3
 1184 000e BD46     		mov	sp, r7
 1185              		@ sp needed
 1186 0010 80BD     		pop	{r7, pc}
 1187              	.L77:
 1188 0012 C046     		.align	2
 1189              	.L76:
 1190 0014 0C012040 		.word	1075839244
 1191              		.cfi_endproc
 1192              	.LFE25:
 1193              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 1194              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 1195              		.align	2
 1196              		.global	Timer_WriteCompareBuf
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	Timer_WriteCompareBuf, %function
 1200              	Timer_WriteCompareBuf:
 1201              	.LFB26:
 929:Generated_Source\PSoC4/Timer.c **** 
 930:Generated_Source\PSoC4/Timer.c **** 
 931:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer.c **** *
 935:Generated_Source\PSoC4/Timer.c **** * Summary:
 936:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer.c **** *
 939:Generated_Source\PSoC4/Timer.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer.c **** *
 942:Generated_Source\PSoC4/Timer.c **** * Return:
 943:Generated_Source\PSoC4/Timer.c **** *  None
 944:Generated_Source\PSoC4/Timer.c **** *
 945:Generated_Source\PSoC4/Timer.c **** * Note:
 946:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer.c **** *
 953:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer.c **** {
 1202              		.loc 1 955 0
 1203              		.cfi_startproc
 1204 0000 80B5     		push	{r7, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 82B0     		sub	sp, sp, #8
 1209              		.cfi_def_cfa_offset 16
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 39


 1212 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer.c **** 
 960:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/Timer.c **** 
 963:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer.c ****         {
 965:Generated_Source\PSoC4/Timer.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer.c ****         }
 967:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer.c ****         {
 969:Generated_Source\PSoC4/Timer.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer.c ****         }
 971:Generated_Source\PSoC4/Timer.c ****         else
 972:Generated_Source\PSoC4/Timer.c ****         {
 973:Generated_Source\PSoC4/Timer.c ****         }
 974:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer.c ****     
 976:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 1213              		.loc 1 976 0
 1214 0008 034B     		ldr	r3, .L79
 1215 000a 7A68     		ldr	r2, [r7, #4]
 1216 000c 1204     		lsl	r2, r2, #16
 1217 000e 120C     		lsr	r2, r2, #16
 1218 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/Timer.c **** }
 1219              		.loc 1 977 0
 1220 0012 BD46     		mov	sp, r7
 1221 0014 02B0     		add	sp, sp, #8
 1222              		@ sp needed
 1223 0016 80BD     		pop	{r7, pc}
 1224              	.L80:
 1225              		.align	2
 1226              	.L79:
 1227 0018 10012040 		.word	1075839248
 1228              		.cfi_endproc
 1229              	.LFE26:
 1230              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 1231              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 1232              		.align	2
 1233              		.global	Timer_ReadCompareBuf
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	Timer_ReadCompareBuf, %function
 1237              	Timer_ReadCompareBuf:
 1238              	.LFB27:
 978:Generated_Source\PSoC4/Timer.c **** 
 979:Generated_Source\PSoC4/Timer.c **** 
 980:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer.c **** *
 984:Generated_Source\PSoC4/Timer.c **** * Summary:
 985:Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 40


 986:Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer.c **** *
 988:Generated_Source\PSoC4/Timer.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer.c **** *  None
 990:Generated_Source\PSoC4/Timer.c **** *
 991:Generated_Source\PSoC4/Timer.c **** * Return:
 992:Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer.c **** *
 994:Generated_Source\PSoC4/Timer.c **** * Note:
 995:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer.c **** *
 999:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer.c **** {
 1239              		.loc 1 1001 0
 1240              		.cfi_startproc
 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 00AF     		add	r7, sp, #0
 1246              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer.c **** 
1007:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/Timer.c **** 
1010:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer.c ****         
1012:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer.c ****         {
1014:Generated_Source\PSoC4/Timer.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer.c ****         }
1016:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer.c ****         {
1018:Generated_Source\PSoC4/Timer.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer.c ****         }
1020:Generated_Source\PSoC4/Timer.c ****         else
1021:Generated_Source\PSoC4/Timer.c ****         {
1022:Generated_Source\PSoC4/Timer.c ****         }
1023:Generated_Source\PSoC4/Timer.c **** 
1024:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer.c ****     #else
1026:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1247              		.loc 1 1026 0
 1248 0004 034B     		ldr	r3, .L83
 1249 0006 1B68     		ldr	r3, [r3]
 1250 0008 1B04     		lsl	r3, r3, #16
 1251 000a 1B0C     		lsr	r3, r3, #16
1027:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer.c **** }
 1252              		.loc 1 1028 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 41


 1253 000c 181C     		mov	r0, r3
 1254 000e BD46     		mov	sp, r7
 1255              		@ sp needed
 1256 0010 80BD     		pop	{r7, pc}
 1257              	.L84:
 1258 0012 C046     		.align	2
 1259              	.L83:
 1260 0014 10012040 		.word	1075839248
 1261              		.cfi_endproc
 1262              	.LFE27:
 1263              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 1264              		.section	.text.Timer_ReadCapture,"ax",%progbits
 1265              		.align	2
 1266              		.global	Timer_ReadCapture
 1267              		.code	16
 1268              		.thumb_func
 1269              		.type	Timer_ReadCapture, %function
 1270              	Timer_ReadCapture:
 1271              	.LFB28:
1029:Generated_Source\PSoC4/Timer.c **** 
1030:Generated_Source\PSoC4/Timer.c **** 
1031:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
1033:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer.c **** *
1035:Generated_Source\PSoC4/Timer.c **** * Summary:
1036:Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer.c **** *
1039:Generated_Source\PSoC4/Timer.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer.c **** *  None
1041:Generated_Source\PSoC4/Timer.c **** *
1042:Generated_Source\PSoC4/Timer.c **** * Return:
1043:Generated_Source\PSoC4/Timer.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer.c **** *
1045:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer.c **** {
 1272              		.loc 1 1047 0
 1273              		.cfi_startproc
 1274 0000 80B5     		push	{r7, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 7, -8
 1277              		.cfi_offset 14, -4
 1278 0002 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 1280              		.loc 1 1048 0
 1281 0004 034B     		ldr	r3, .L87
 1282 0006 1B68     		ldr	r3, [r3]
 1283 0008 1B04     		lsl	r3, r3, #16
 1284 000a 1B0C     		lsr	r3, r3, #16
1049:Generated_Source\PSoC4/Timer.c **** }
 1285              		.loc 1 1049 0
 1286 000c 181C     		mov	r0, r3
 1287 000e BD46     		mov	sp, r7
 1288              		@ sp needed
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 42


 1289 0010 80BD     		pop	{r7, pc}
 1290              	.L88:
 1291 0012 C046     		.align	2
 1292              	.L87:
 1293 0014 0C012040 		.word	1075839244
 1294              		.cfi_endproc
 1295              	.LFE28:
 1296              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 1297              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 1298              		.align	2
 1299              		.global	Timer_ReadCaptureBuf
 1300              		.code	16
 1301              		.thumb_func
 1302              		.type	Timer_ReadCaptureBuf, %function
 1303              	Timer_ReadCaptureBuf:
 1304              	.LFB29:
1050:Generated_Source\PSoC4/Timer.c **** 
1051:Generated_Source\PSoC4/Timer.c **** 
1052:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer.c **** *
1056:Generated_Source\PSoC4/Timer.c **** * Summary:
1057:Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer.c **** *
1060:Generated_Source\PSoC4/Timer.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer.c **** *  None
1062:Generated_Source\PSoC4/Timer.c **** *
1063:Generated_Source\PSoC4/Timer.c **** * Return:
1064:Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer.c **** *
1066:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer.c **** {
 1305              		.loc 1 1068 0
 1306              		.cfi_startproc
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 00AF     		add	r7, sp, #0
 1312              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1313              		.loc 1 1069 0
 1314 0004 034B     		ldr	r3, .L91
 1315 0006 1B68     		ldr	r3, [r3]
 1316 0008 1B04     		lsl	r3, r3, #16
 1317 000a 1B0C     		lsr	r3, r3, #16
1070:Generated_Source\PSoC4/Timer.c **** }
 1318              		.loc 1 1070 0
 1319 000c 181C     		mov	r0, r3
 1320 000e BD46     		mov	sp, r7
 1321              		@ sp needed
 1322 0010 80BD     		pop	{r7, pc}
 1323              	.L92:
 1324 0012 C046     		.align	2
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 43


 1325              	.L91:
 1326 0014 10012040 		.word	1075839248
 1327              		.cfi_endproc
 1328              	.LFE29:
 1329              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
 1330              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 1331              		.align	2
 1332              		.global	Timer_SetCaptureMode
 1333              		.code	16
 1334              		.thumb_func
 1335              		.type	Timer_SetCaptureMode, %function
 1336              	Timer_SetCaptureMode:
 1337              	.LFB30:
1071:Generated_Source\PSoC4/Timer.c **** 
1072:Generated_Source\PSoC4/Timer.c **** 
1073:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1075:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer.c **** *
1077:Generated_Source\PSoC4/Timer.c **** * Summary:
1078:Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer.c **** *
1082:Generated_Source\PSoC4/Timer.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer.c **** *   Values:
1085:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer.c **** *
1090:Generated_Source\PSoC4/Timer.c **** * Return:
1091:Generated_Source\PSoC4/Timer.c **** *  None
1092:Generated_Source\PSoC4/Timer.c **** *
1093:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer.c **** {
 1338              		.loc 1 1095 0
 1339              		.cfi_startproc
 1340 0000 90B5     		push	{r4, r7, lr}
 1341              		.cfi_def_cfa_offset 12
 1342              		.cfi_offset 4, -12
 1343              		.cfi_offset 7, -8
 1344              		.cfi_offset 14, -4
 1345 0002 85B0     		sub	sp, sp, #20
 1346              		.cfi_def_cfa_offset 32
 1347 0004 00AF     		add	r7, sp, #0
 1348              		.cfi_def_cfa_register 7
 1349 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer.c **** 
1098:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1350              		.loc 1 1098 0
 1351 0008 0F23     		mov	r3, #15
 1352 000a FC18     		add	r4, r7, r3
 1353 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 44


 1354 0010 031C     		mov	r3, r0
 1355 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/Timer.c **** 
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1356              		.loc 1 1100 0
 1357 0014 0A4B     		ldr	r3, .L94
 1358 0016 0A4A     		ldr	r2, .L94
 1359 0018 1268     		ldr	r2, [r2]
 1360 001a 0321     		mov	r1, #3
 1361 001c 8A43     		bic	r2, r1
 1362 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1363              		.loc 1 1101 0
 1364 0020 074B     		ldr	r3, .L94
 1365 0022 074A     		ldr	r2, .L94
 1366 0024 1168     		ldr	r1, [r2]
 1367 0026 7A68     		ldr	r2, [r7, #4]
 1368 0028 0A43     		orr	r2, r1
 1369 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/Timer.c **** 
1103:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1370              		.loc 1 1103 0
 1371 002c 0F23     		mov	r3, #15
 1372 002e FB18     		add	r3, r7, r3
 1373 0030 1B78     		ldrb	r3, [r3]
 1374 0032 181C     		mov	r0, r3
 1375 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/Timer.c **** }
 1376              		.loc 1 1104 0
 1377 0038 BD46     		mov	sp, r7
 1378 003a 05B0     		add	sp, sp, #20
 1379              		@ sp needed
 1380 003c 90BD     		pop	{r4, r7, pc}
 1381              	.L95:
 1382 003e C046     		.align	2
 1383              	.L94:
 1384 0040 24012040 		.word	1075839268
 1385              		.cfi_endproc
 1386              	.LFE30:
 1387              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1388              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1389              		.align	2
 1390              		.global	Timer_SetReloadMode
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	Timer_SetReloadMode, %function
 1394              	Timer_SetReloadMode:
 1395              	.LFB31:
1105:Generated_Source\PSoC4/Timer.c **** 
1106:Generated_Source\PSoC4/Timer.c **** 
1107:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1109:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer.c **** *
1111:Generated_Source\PSoC4/Timer.c **** * Summary:
1112:Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer.c **** *  input.
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 45


1114:Generated_Source\PSoC4/Timer.c **** *
1115:Generated_Source\PSoC4/Timer.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer.c **** *   Values:
1118:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer.c **** *
1123:Generated_Source\PSoC4/Timer.c **** * Return:
1124:Generated_Source\PSoC4/Timer.c **** *  None
1125:Generated_Source\PSoC4/Timer.c **** *
1126:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer.c **** {
 1396              		.loc 1 1128 0
 1397              		.cfi_startproc
 1398 0000 90B5     		push	{r4, r7, lr}
 1399              		.cfi_def_cfa_offset 12
 1400              		.cfi_offset 4, -12
 1401              		.cfi_offset 7, -8
 1402              		.cfi_offset 14, -4
 1403 0002 85B0     		sub	sp, sp, #20
 1404              		.cfi_def_cfa_offset 32
 1405 0004 00AF     		add	r7, sp, #0
 1406              		.cfi_def_cfa_register 7
 1407 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer.c **** 
1131:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1408              		.loc 1 1131 0
 1409 0008 0F23     		mov	r3, #15
 1410 000a FC18     		add	r4, r7, r3
 1411 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1412 0010 031C     		mov	r3, r0
 1413 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/Timer.c **** 
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1414              		.loc 1 1133 0
 1415 0014 0A4B     		ldr	r3, .L97
 1416 0016 0A4A     		ldr	r2, .L97
 1417 0018 1268     		ldr	r2, [r2]
 1418 001a 3021     		mov	r1, #48
 1419 001c 8A43     		bic	r2, r1
 1420 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1421              		.loc 1 1134 0
 1422 0020 074B     		ldr	r3, .L97
 1423 0022 074A     		ldr	r2, .L97
 1424 0024 1168     		ldr	r1, [r2]
 1425 0026 7A68     		ldr	r2, [r7, #4]
 1426 0028 1201     		lsl	r2, r2, #4
 1427 002a 0A43     		orr	r2, r1
 1428 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/Timer.c **** 
1136:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1429              		.loc 1 1136 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 46


 1430 002e 0F23     		mov	r3, #15
 1431 0030 FB18     		add	r3, r7, r3
 1432 0032 1B78     		ldrb	r3, [r3]
 1433 0034 181C     		mov	r0, r3
 1434 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/Timer.c **** }
 1435              		.loc 1 1137 0
 1436 003a BD46     		mov	sp, r7
 1437 003c 05B0     		add	sp, sp, #20
 1438              		@ sp needed
 1439 003e 90BD     		pop	{r4, r7, pc}
 1440              	.L98:
 1441              		.align	2
 1442              	.L97:
 1443 0040 24012040 		.word	1075839268
 1444              		.cfi_endproc
 1445              	.LFE31:
 1446              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1447              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1448              		.align	2
 1449              		.global	Timer_SetStartMode
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	Timer_SetStartMode, %function
 1453              	Timer_SetStartMode:
 1454              	.LFB32:
1138:Generated_Source\PSoC4/Timer.c **** 
1139:Generated_Source\PSoC4/Timer.c **** 
1140:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1142:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer.c **** *
1144:Generated_Source\PSoC4/Timer.c **** * Summary:
1145:Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer.c **** *
1148:Generated_Source\PSoC4/Timer.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer.c **** *   Values:
1151:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer.c **** *
1156:Generated_Source\PSoC4/Timer.c **** * Return:
1157:Generated_Source\PSoC4/Timer.c **** *  None
1158:Generated_Source\PSoC4/Timer.c **** *
1159:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer.c **** {
 1455              		.loc 1 1161 0
 1456              		.cfi_startproc
 1457 0000 90B5     		push	{r4, r7, lr}
 1458              		.cfi_def_cfa_offset 12
 1459              		.cfi_offset 4, -12
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 47


 1462 0002 85B0     		sub	sp, sp, #20
 1463              		.cfi_def_cfa_offset 32
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer.c **** 
1164:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1467              		.loc 1 1164 0
 1468 0008 0F23     		mov	r3, #15
 1469 000a FC18     		add	r4, r7, r3
 1470 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1471 0010 031C     		mov	r3, r0
 1472 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/Timer.c **** 
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1473              		.loc 1 1166 0
 1474 0014 0A4B     		ldr	r3, .L100
 1475 0016 0A4A     		ldr	r2, .L100
 1476 0018 1268     		ldr	r2, [r2]
 1477 001a 0A49     		ldr	r1, .L100+4
 1478 001c 0A40     		and	r2, r1
 1479 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1480              		.loc 1 1167 0
 1481 0020 074B     		ldr	r3, .L100
 1482 0022 074A     		ldr	r2, .L100
 1483 0024 1168     		ldr	r1, [r2]
 1484 0026 7A68     		ldr	r2, [r7, #4]
 1485 0028 1202     		lsl	r2, r2, #8
 1486 002a 0A43     		orr	r2, r1
 1487 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/Timer.c **** 
1169:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1488              		.loc 1 1169 0
 1489 002e 0F23     		mov	r3, #15
 1490 0030 FB18     		add	r3, r7, r3
 1491 0032 1B78     		ldrb	r3, [r3]
 1492 0034 181C     		mov	r0, r3
 1493 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/Timer.c **** }
 1494              		.loc 1 1170 0
 1495 003a BD46     		mov	sp, r7
 1496 003c 05B0     		add	sp, sp, #20
 1497              		@ sp needed
 1498 003e 90BD     		pop	{r4, r7, pc}
 1499              	.L101:
 1500              		.align	2
 1501              	.L100:
 1502 0040 24012040 		.word	1075839268
 1503 0044 FFFCFFFF 		.word	-769
 1504              		.cfi_endproc
 1505              	.LFE32:
 1506              		.size	Timer_SetStartMode, .-Timer_SetStartMode
 1507              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1508              		.align	2
 1509              		.global	Timer_SetStopMode
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 48


 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	Timer_SetStopMode, %function
 1513              	Timer_SetStopMode:
 1514              	.LFB33:
1171:Generated_Source\PSoC4/Timer.c **** 
1172:Generated_Source\PSoC4/Timer.c **** 
1173:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1175:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer.c **** *
1177:Generated_Source\PSoC4/Timer.c **** * Summary:
1178:Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer.c **** *
1180:Generated_Source\PSoC4/Timer.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer.c **** *   Values:
1183:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer.c **** *
1188:Generated_Source\PSoC4/Timer.c **** * Return:
1189:Generated_Source\PSoC4/Timer.c **** *  None
1190:Generated_Source\PSoC4/Timer.c **** *
1191:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer.c **** {
 1515              		.loc 1 1193 0
 1516              		.cfi_startproc
 1517 0000 90B5     		push	{r4, r7, lr}
 1518              		.cfi_def_cfa_offset 12
 1519              		.cfi_offset 4, -12
 1520              		.cfi_offset 7, -8
 1521              		.cfi_offset 14, -4
 1522 0002 85B0     		sub	sp, sp, #20
 1523              		.cfi_def_cfa_offset 32
 1524 0004 00AF     		add	r7, sp, #0
 1525              		.cfi_def_cfa_register 7
 1526 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer.c **** 
1196:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1527              		.loc 1 1196 0
 1528 0008 0F23     		mov	r3, #15
 1529 000a FC18     		add	r4, r7, r3
 1530 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1531 0010 031C     		mov	r3, r0
 1532 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/Timer.c **** 
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1533              		.loc 1 1198 0
 1534 0014 0A4B     		ldr	r3, .L103
 1535 0016 0A4A     		ldr	r2, .L103
 1536 0018 1268     		ldr	r2, [r2]
 1537 001a C021     		mov	r1, #192
 1538 001c 8A43     		bic	r2, r1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 49


 1539 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1540              		.loc 1 1199 0
 1541 0020 074B     		ldr	r3, .L103
 1542 0022 074A     		ldr	r2, .L103
 1543 0024 1168     		ldr	r1, [r2]
 1544 0026 7A68     		ldr	r2, [r7, #4]
 1545 0028 9201     		lsl	r2, r2, #6
 1546 002a 0A43     		orr	r2, r1
 1547 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/Timer.c **** 
1201:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1548              		.loc 1 1201 0
 1549 002e 0F23     		mov	r3, #15
 1550 0030 FB18     		add	r3, r7, r3
 1551 0032 1B78     		ldrb	r3, [r3]
 1552 0034 181C     		mov	r0, r3
 1553 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/Timer.c **** }
 1554              		.loc 1 1202 0
 1555 003a BD46     		mov	sp, r7
 1556 003c 05B0     		add	sp, sp, #20
 1557              		@ sp needed
 1558 003e 90BD     		pop	{r4, r7, pc}
 1559              	.L104:
 1560              		.align	2
 1561              	.L103:
 1562 0040 24012040 		.word	1075839268
 1563              		.cfi_endproc
 1564              	.LFE33:
 1565              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1566              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1567              		.align	2
 1568              		.global	Timer_SetCountMode
 1569              		.code	16
 1570              		.thumb_func
 1571              		.type	Timer_SetCountMode, %function
 1572              	Timer_SetCountMode:
 1573              	.LFB34:
1203:Generated_Source\PSoC4/Timer.c **** 
1204:Generated_Source\PSoC4/Timer.c **** 
1205:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1207:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer.c **** *
1209:Generated_Source\PSoC4/Timer.c **** * Summary:
1210:Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer.c **** *  input.
1212:Generated_Source\PSoC4/Timer.c **** *
1213:Generated_Source\PSoC4/Timer.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer.c **** *   Values:
1216:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 50


1221:Generated_Source\PSoC4/Timer.c **** * Return:
1222:Generated_Source\PSoC4/Timer.c **** *  None
1223:Generated_Source\PSoC4/Timer.c **** *
1224:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer.c **** {
 1574              		.loc 1 1226 0
 1575              		.cfi_startproc
 1576 0000 90B5     		push	{r4, r7, lr}
 1577              		.cfi_def_cfa_offset 12
 1578              		.cfi_offset 4, -12
 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 85B0     		sub	sp, sp, #20
 1582              		.cfi_def_cfa_offset 32
 1583 0004 00AF     		add	r7, sp, #0
 1584              		.cfi_def_cfa_register 7
 1585 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer.c **** 
1229:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1586              		.loc 1 1229 0
 1587 0008 0F23     		mov	r3, #15
 1588 000a FC18     		add	r4, r7, r3
 1589 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1590 0010 031C     		mov	r3, r0
 1591 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/Timer.c **** 
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1592              		.loc 1 1231 0
 1593 0014 0A4B     		ldr	r3, .L106
 1594 0016 0A4A     		ldr	r2, .L106
 1595 0018 1268     		ldr	r2, [r2]
 1596 001a 0C21     		mov	r1, #12
 1597 001c 8A43     		bic	r2, r1
 1598 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1599              		.loc 1 1232 0
 1600 0020 074B     		ldr	r3, .L106
 1601 0022 074A     		ldr	r2, .L106
 1602 0024 1168     		ldr	r1, [r2]
 1603 0026 7A68     		ldr	r2, [r7, #4]
 1604 0028 9200     		lsl	r2, r2, #2
 1605 002a 0A43     		orr	r2, r1
 1606 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/Timer.c **** 
1234:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1607              		.loc 1 1234 0
 1608 002e 0F23     		mov	r3, #15
 1609 0030 FB18     		add	r3, r7, r3
 1610 0032 1B78     		ldrb	r3, [r3]
 1611 0034 181C     		mov	r0, r3
 1612 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/Timer.c **** }
 1613              		.loc 1 1235 0
 1614 003a BD46     		mov	sp, r7
 1615 003c 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 51


 1616              		@ sp needed
 1617 003e 90BD     		pop	{r4, r7, pc}
 1618              	.L107:
 1619              		.align	2
 1620              	.L106:
 1621 0040 24012040 		.word	1075839268
 1622              		.cfi_endproc
 1623              	.LFE34:
 1624              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1625              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1626              		.align	2
 1627              		.global	Timer_TriggerCommand
 1628              		.code	16
 1629              		.thumb_func
 1630              		.type	Timer_TriggerCommand, %function
 1631              	Timer_TriggerCommand:
 1632              	.LFB35:
1236:Generated_Source\PSoC4/Timer.c **** 
1237:Generated_Source\PSoC4/Timer.c **** 
1238:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1240:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer.c **** *
1242:Generated_Source\PSoC4/Timer.c **** * Summary:
1243:Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer.c **** *
1247:Generated_Source\PSoC4/Timer.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer.c **** *        define.
1253:Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer.c **** *   Values:
1256:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer.c **** *
1261:Generated_Source\PSoC4/Timer.c **** * Return:
1262:Generated_Source\PSoC4/Timer.c **** *  None
1263:Generated_Source\PSoC4/Timer.c **** *
1264:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer.c **** {
 1633              		.loc 1 1266 0
 1634              		.cfi_startproc
 1635 0000 90B5     		push	{r4, r7, lr}
 1636              		.cfi_def_cfa_offset 12
 1637              		.cfi_offset 4, -12
 1638              		.cfi_offset 7, -8
 1639              		.cfi_offset 14, -4
 1640 0002 85B0     		sub	sp, sp, #20
 1641              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 52


 1642 0004 00AF     		add	r7, sp, #0
 1643              		.cfi_def_cfa_register 7
 1644 0006 7860     		str	r0, [r7, #4]
 1645 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer.c **** 
1269:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1646              		.loc 1 1269 0
 1647 000a 0F23     		mov	r3, #15
 1648 000c FC18     		add	r4, r7, r3
 1649 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1650 0012 031C     		mov	r3, r0
 1651 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/Timer.c **** 
1271:Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
 1652              		.loc 1 1271 0
 1653 0016 074B     		ldr	r3, .L109
 1654 0018 3A68     		ldr	r2, [r7]
 1655 001a 7968     		ldr	r1, [r7, #4]
 1656 001c 9140     		lsl	r1, r1, r2
 1657 001e 0A1C     		mov	r2, r1
 1658 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/Timer.c **** 
1273:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1659              		.loc 1 1273 0
 1660 0022 0F23     		mov	r3, #15
 1661 0024 FB18     		add	r3, r7, r3
 1662 0026 1B78     		ldrb	r3, [r3]
 1663 0028 181C     		mov	r0, r3
 1664 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/Timer.c **** }
 1665              		.loc 1 1274 0
 1666 002e BD46     		mov	sp, r7
 1667 0030 05B0     		add	sp, sp, #20
 1668              		@ sp needed
 1669 0032 90BD     		pop	{r4, r7, pc}
 1670              	.L110:
 1671              		.align	2
 1672              	.L109:
 1673 0034 08002040 		.word	1075838984
 1674              		.cfi_endproc
 1675              	.LFE35:
 1676              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
 1677              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1678              		.align	2
 1679              		.global	Timer_ReadStatus
 1680              		.code	16
 1681              		.thumb_func
 1682              		.type	Timer_ReadStatus, %function
 1683              	Timer_ReadStatus:
 1684              	.LFB36:
1275:Generated_Source\PSoC4/Timer.c **** 
1276:Generated_Source\PSoC4/Timer.c **** 
1277:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1279:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 53


1281:Generated_Source\PSoC4/Timer.c **** * Summary:
1282:Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1283:Generated_Source\PSoC4/Timer.c **** *
1284:Generated_Source\PSoC4/Timer.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer.c **** *  None
1286:Generated_Source\PSoC4/Timer.c **** *
1287:Generated_Source\PSoC4/Timer.c **** * Return:
1288:Generated_Source\PSoC4/Timer.c **** *  Status
1289:Generated_Source\PSoC4/Timer.c **** *   Values:
1290:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer.c **** *
1293:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer.c **** {
 1685              		.loc 1 1295 0
 1686              		.cfi_startproc
 1687 0000 80B5     		push	{r7, lr}
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 7, -8
 1690              		.cfi_offset 14, -4
 1691 0002 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1693              		.loc 1 1296 0
 1694 0004 054B     		ldr	r3, .L113
 1695 0006 1B68     		ldr	r3, [r3]
 1696 0008 9A0F     		lsr	r2, r3, #30
1297:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1697              		.loc 1 1297 0
 1698 000a 044B     		ldr	r3, .L113
 1699 000c 1B68     		ldr	r3, [r3]
 1700 000e 0121     		mov	r1, #1
 1701 0010 0B40     		and	r3, r1
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1702              		.loc 1 1296 0
 1703 0012 1343     		orr	r3, r2
1298:Generated_Source\PSoC4/Timer.c **** }
 1704              		.loc 1 1298 0
 1705 0014 181C     		mov	r0, r3
 1706 0016 BD46     		mov	sp, r7
 1707              		@ sp needed
 1708 0018 80BD     		pop	{r7, pc}
 1709              	.L114:
 1710 001a C046     		.align	2
 1711              	.L113:
 1712 001c 04012040 		.word	1075839236
 1713              		.cfi_endproc
 1714              	.LFE36:
 1715              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1716              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1717              		.align	2
 1718              		.global	Timer_SetInterruptMode
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	Timer_SetInterruptMode, %function
 1722              	Timer_SetInterruptMode:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 54


 1723              	.LFB37:
1299:Generated_Source\PSoC4/Timer.c **** 
1300:Generated_Source\PSoC4/Timer.c **** 
1301:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1303:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer.c **** *
1305:Generated_Source\PSoC4/Timer.c **** * Summary:
1306:Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer.c **** *
1309:Generated_Source\PSoC4/Timer.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer.c **** *   Values:
1312:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer.c **** *
1315:Generated_Source\PSoC4/Timer.c **** * Return:
1316:Generated_Source\PSoC4/Timer.c **** *  None
1317:Generated_Source\PSoC4/Timer.c **** *
1318:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer.c **** {
 1724              		.loc 1 1320 0
 1725              		.cfi_startproc
 1726 0000 80B5     		push	{r7, lr}
 1727              		.cfi_def_cfa_offset 8
 1728              		.cfi_offset 7, -8
 1729              		.cfi_offset 14, -4
 1730 0002 82B0     		sub	sp, sp, #8
 1731              		.cfi_def_cfa_offset 16
 1732 0004 00AF     		add	r7, sp, #0
 1733              		.cfi_def_cfa_register 7
 1734 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1735              		.loc 1 1321 0
 1736 0008 024B     		ldr	r3, .L116
 1737 000a 7A68     		ldr	r2, [r7, #4]
 1738 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/Timer.c **** }
 1739              		.loc 1 1322 0
 1740 000e BD46     		mov	sp, r7
 1741 0010 02B0     		add	sp, sp, #8
 1742              		@ sp needed
 1743 0012 80BD     		pop	{r7, pc}
 1744              	.L117:
 1745              		.align	2
 1746              	.L116:
 1747 0014 38012040 		.word	1075839288
 1748              		.cfi_endproc
 1749              	.LFE37:
 1750              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1751              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
 1752              		.align	2
 1753              		.global	Timer_GetInterruptSourceMasked
 1754              		.code	16
 1755              		.thumb_func
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 55


 1756              		.type	Timer_GetInterruptSourceMasked, %function
 1757              	Timer_GetInterruptSourceMasked:
 1758              	.LFB38:
1323:Generated_Source\PSoC4/Timer.c **** 
1324:Generated_Source\PSoC4/Timer.c **** 
1325:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer.c **** *
1329:Generated_Source\PSoC4/Timer.c **** * Summary:
1330:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer.c **** *
1332:Generated_Source\PSoC4/Timer.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer.c **** *   None
1334:Generated_Source\PSoC4/Timer.c **** *
1335:Generated_Source\PSoC4/Timer.c **** * Return:
1336:Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer.c **** *   Values:
1338:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer.c **** *
1341:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer.c **** {
 1759              		.loc 1 1343 0
 1760              		.cfi_startproc
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1767              		.loc 1 1344 0
 1768 0004 024B     		ldr	r3, .L120
 1769 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/Timer.c **** }
 1770              		.loc 1 1345 0
 1771 0008 181C     		mov	r0, r3
 1772 000a BD46     		mov	sp, r7
 1773              		@ sp needed
 1774 000c 80BD     		pop	{r7, pc}
 1775              	.L121:
 1776 000e C046     		.align	2
 1777              	.L120:
 1778 0010 3C012040 		.word	1075839292
 1779              		.cfi_endproc
 1780              	.LFE38:
 1781              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1782              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1783              		.align	2
 1784              		.global	Timer_GetInterruptSource
 1785              		.code	16
 1786              		.thumb_func
 1787              		.type	Timer_GetInterruptSource, %function
 1788              	Timer_GetInterruptSource:
 1789              	.LFB39:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 56


1346:Generated_Source\PSoC4/Timer.c **** 
1347:Generated_Source\PSoC4/Timer.c **** 
1348:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1350:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer.c **** *
1352:Generated_Source\PSoC4/Timer.c **** * Summary:
1353:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer.c **** *
1355:Generated_Source\PSoC4/Timer.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer.c **** *  None
1357:Generated_Source\PSoC4/Timer.c **** *
1358:Generated_Source\PSoC4/Timer.c **** * Return:
1359:Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer.c **** *   Values:
1361:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer.c **** *
1364:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer.c **** {
 1790              		.loc 1 1366 0
 1791              		.cfi_startproc
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 00AF     		add	r7, sp, #0
 1797              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1798              		.loc 1 1367 0
 1799 0004 024B     		ldr	r3, .L124
 1800 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/Timer.c **** }
 1801              		.loc 1 1368 0
 1802 0008 181C     		mov	r0, r3
 1803 000a BD46     		mov	sp, r7
 1804              		@ sp needed
 1805 000c 80BD     		pop	{r7, pc}
 1806              	.L125:
 1807 000e C046     		.align	2
 1808              	.L124:
 1809 0010 30012040 		.word	1075839280
 1810              		.cfi_endproc
 1811              	.LFE39:
 1812              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1813              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1814              		.align	2
 1815              		.global	Timer_ClearInterrupt
 1816              		.code	16
 1817              		.thumb_func
 1818              		.type	Timer_ClearInterrupt, %function
 1819              	Timer_ClearInterrupt:
 1820              	.LFB40:
1369:Generated_Source\PSoC4/Timer.c **** 
1370:Generated_Source\PSoC4/Timer.c **** 
1371:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 57


1372:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1373:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer.c **** *
1375:Generated_Source\PSoC4/Timer.c **** * Summary:
1376:Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer.c **** *
1378:Generated_Source\PSoC4/Timer.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer.c **** *   Values:
1381:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer.c **** *
1384:Generated_Source\PSoC4/Timer.c **** * Return:
1385:Generated_Source\PSoC4/Timer.c **** *  None
1386:Generated_Source\PSoC4/Timer.c **** *
1387:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer.c **** {
 1821              		.loc 1 1389 0
 1822              		.cfi_startproc
 1823 0000 80B5     		push	{r7, lr}
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 82B0     		sub	sp, sp, #8
 1828              		.cfi_def_cfa_offset 16
 1829 0004 00AF     		add	r7, sp, #0
 1830              		.cfi_def_cfa_register 7
 1831 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1832              		.loc 1 1390 0
 1833 0008 024B     		ldr	r3, .L127
 1834 000a 7A68     		ldr	r2, [r7, #4]
 1835 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/Timer.c **** }
 1836              		.loc 1 1391 0
 1837 000e BD46     		mov	sp, r7
 1838 0010 02B0     		add	sp, sp, #8
 1839              		@ sp needed
 1840 0012 80BD     		pop	{r7, pc}
 1841              	.L128:
 1842              		.align	2
 1843              	.L127:
 1844 0014 30012040 		.word	1075839280
 1845              		.cfi_endproc
 1846              	.LFE40:
 1847              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1848              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1849              		.align	2
 1850              		.global	Timer_SetInterrupt
 1851              		.code	16
 1852              		.thumb_func
 1853              		.type	Timer_SetInterrupt, %function
 1854              	Timer_SetInterrupt:
 1855              	.LFB41:
1392:Generated_Source\PSoC4/Timer.c **** 
1393:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 58


1394:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1396:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer.c **** *
1398:Generated_Source\PSoC4/Timer.c **** * Summary:
1399:Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer.c **** *
1401:Generated_Source\PSoC4/Timer.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer.c **** *   Values:
1404:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer.c **** *
1407:Generated_Source\PSoC4/Timer.c **** * Return:
1408:Generated_Source\PSoC4/Timer.c **** *  None
1409:Generated_Source\PSoC4/Timer.c **** *
1410:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer.c **** {
 1856              		.loc 1 1412 0
 1857              		.cfi_startproc
 1858 0000 80B5     		push	{r7, lr}
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 7, -8
 1861              		.cfi_offset 14, -4
 1862 0002 82B0     		sub	sp, sp, #8
 1863              		.cfi_def_cfa_offset 16
 1864 0004 00AF     		add	r7, sp, #0
 1865              		.cfi_def_cfa_register 7
 1866 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1867              		.loc 1 1413 0
 1868 0008 024B     		ldr	r3, .L130
 1869 000a 7A68     		ldr	r2, [r7, #4]
 1870 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/Timer.c **** }
 1871              		.loc 1 1414 0
 1872 000e BD46     		mov	sp, r7
 1873 0010 02B0     		add	sp, sp, #8
 1874              		@ sp needed
 1875 0012 80BD     		pop	{r7, pc}
 1876              	.L131:
 1877              		.align	2
 1878              	.L130:
 1879 0014 34012040 		.word	1075839284
 1880              		.cfi_endproc
 1881              	.LFE41:
 1882              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1883              		.text
 1884              	.Letext0:
 1885              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1886              		.section	.debug_info,"",%progbits
 1887              	.Ldebug_info0:
 1888 0000 F0060000 		.4byte	0x6f0
 1889 0004 0400     		.2byte	0x4
 1890 0006 00000000 		.4byte	.Ldebug_abbrev0
 1891 000a 04       		.byte	0x4
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 59


 1892 000b 01       		.uleb128 0x1
 1893 000c B5040000 		.4byte	.LASF76
 1894 0010 01       		.byte	0x1
 1895 0011 4A040000 		.4byte	.LASF77
 1896 0015 36000000 		.4byte	.LASF78
 1897 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1898 001d 00000000 		.4byte	0
 1899 0021 00000000 		.4byte	.Ldebug_line0
 1900 0025 02       		.uleb128 0x2
 1901 0026 01       		.byte	0x1
 1902 0027 06       		.byte	0x6
 1903 0028 11010000 		.4byte	.LASF0
 1904 002c 02       		.uleb128 0x2
 1905 002d 01       		.byte	0x1
 1906 002e 08       		.byte	0x8
 1907 002f 8F030000 		.4byte	.LASF1
 1908 0033 02       		.uleb128 0x2
 1909 0034 02       		.byte	0x2
 1910 0035 05       		.byte	0x5
 1911 0036 AE030000 		.4byte	.LASF2
 1912 003a 02       		.uleb128 0x2
 1913 003b 02       		.byte	0x2
 1914 003c 07       		.byte	0x7
 1915 003d 41020000 		.4byte	.LASF3
 1916 0041 02       		.uleb128 0x2
 1917 0042 04       		.byte	0x4
 1918 0043 05       		.byte	0x5
 1919 0044 48010000 		.4byte	.LASF4
 1920 0048 02       		.uleb128 0x2
 1921 0049 04       		.byte	0x4
 1922 004a 07       		.byte	0x7
 1923 004b 19020000 		.4byte	.LASF5
 1924 004f 02       		.uleb128 0x2
 1925 0050 08       		.byte	0x8
 1926 0051 05       		.byte	0x5
 1927 0052 03010000 		.4byte	.LASF6
 1928 0056 02       		.uleb128 0x2
 1929 0057 08       		.byte	0x8
 1930 0058 07       		.byte	0x7
 1931 0059 BB000000 		.4byte	.LASF7
 1932 005d 03       		.uleb128 0x3
 1933 005e 04       		.byte	0x4
 1934 005f 05       		.byte	0x5
 1935 0060 696E7400 		.ascii	"int\000"
 1936 0064 02       		.uleb128 0x2
 1937 0065 04       		.byte	0x4
 1938 0066 07       		.byte	0x7
 1939 0067 F8010000 		.4byte	.LASF8
 1940 006b 04       		.uleb128 0x4
 1941 006c 78010000 		.4byte	.LASF9
 1942 0070 02       		.byte	0x2
 1943 0071 B901     		.2byte	0x1b9
 1944 0073 2C000000 		.4byte	0x2c
 1945 0077 04       		.uleb128 0x4
 1946 0078 9C010000 		.4byte	.LASF10
 1947 007c 02       		.byte	0x2
 1948 007d BB01     		.2byte	0x1bb
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 60


 1949 007f 48000000 		.4byte	0x48
 1950 0083 02       		.uleb128 0x2
 1951 0084 04       		.byte	0x4
 1952 0085 04       		.byte	0x4
 1953 0086 33030000 		.4byte	.LASF11
 1954 008a 02       		.uleb128 0x2
 1955 008b 08       		.byte	0x8
 1956 008c 04       		.byte	0x4
 1957 008d 7E010000 		.4byte	.LASF12
 1958 0091 02       		.uleb128 0x2
 1959 0092 01       		.byte	0x1
 1960 0093 08       		.byte	0x8
 1961 0094 F9030000 		.4byte	.LASF13
 1962 0098 04       		.uleb128 0x4
 1963 0099 B1020000 		.4byte	.LASF14
 1964 009d 02       		.byte	0x2
 1965 009e 6502     		.2byte	0x265
 1966 00a0 A4000000 		.4byte	0xa4
 1967 00a4 05       		.uleb128 0x5
 1968 00a5 77000000 		.4byte	0x77
 1969 00a9 02       		.uleb128 0x2
 1970 00aa 04       		.byte	0x4
 1971 00ab 07       		.byte	0x7
 1972 00ac CC020000 		.4byte	.LASF15
 1973 00b0 06       		.uleb128 0x6
 1974 00b1 D9030000 		.4byte	.LASF16
 1975 00b5 01       		.byte	0x1
 1976 00b6 26       		.byte	0x26
 1977 00b7 00000000 		.4byte	.LFB2
 1978 00bb 3C000000 		.4byte	.LFE2-.LFB2
 1979 00bf 01       		.uleb128 0x1
 1980 00c0 9C       		.byte	0x9c
 1981 00c1 07       		.uleb128 0x7
 1982 00c2 34020000 		.4byte	.LASF18
 1983 00c6 01       		.byte	0x1
 1984 00c7 B1       		.byte	0xb1
 1985 00c8 00000000 		.4byte	.LFB3
 1986 00cc 38000000 		.4byte	.LFE3-.LFB3
 1987 00d0 01       		.uleb128 0x1
 1988 00d1 9C       		.byte	0x9c
 1989 00d2 E5000000 		.4byte	0xe5
 1990 00d6 08       		.uleb128 0x8
 1991 00d7 69040000 		.4byte	.LASF20
 1992 00db 01       		.byte	0x1
 1993 00dc B3       		.byte	0xb3
 1994 00dd 6B000000 		.4byte	0x6b
 1995 00e1 02       		.uleb128 0x2
 1996 00e2 91       		.byte	0x91
 1997 00e3 6F       		.sleb128 -17
 1998 00e4 00       		.byte	0
 1999 00e5 06       		.uleb128 0x6
 2000 00e6 05020000 		.4byte	.LASF17
 2001 00ea 01       		.byte	0x1
 2002 00eb E6       		.byte	0xe6
 2003 00ec 00000000 		.4byte	.LFB4
 2004 00f0 24000000 		.4byte	.LFE4-.LFB4
 2005 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 61


 2006 00f5 9C       		.byte	0x9c
 2007 00f6 09       		.uleb128 0x9
 2008 00f7 79020000 		.4byte	.LASF19
 2009 00fb 01       		.byte	0x1
 2010 00fc 0001     		.2byte	0x100
 2011 00fe 00000000 		.4byte	.LFB5
 2012 0102 30000000 		.4byte	.LFE5-.LFB5
 2013 0106 01       		.uleb128 0x1
 2014 0107 9C       		.byte	0x9c
 2015 0108 1C010000 		.4byte	0x11c
 2016 010c 0A       		.uleb128 0xa
 2017 010d 69040000 		.4byte	.LASF20
 2018 0111 01       		.byte	0x1
 2019 0112 0201     		.2byte	0x102
 2020 0114 6B000000 		.4byte	0x6b
 2021 0118 02       		.uleb128 0x2
 2022 0119 91       		.byte	0x91
 2023 011a 6F       		.sleb128 -17
 2024 011b 00       		.byte	0
 2025 011c 09       		.uleb128 0x9
 2026 011d 9F000000 		.4byte	.LASF21
 2027 0121 01       		.byte	0x1
 2028 0122 2501     		.2byte	0x125
 2029 0124 00000000 		.4byte	.LFB6
 2030 0128 48000000 		.4byte	.LFE6-.LFB6
 2031 012c 01       		.uleb128 0x1
 2032 012d 9C       		.byte	0x9c
 2033 012e 51010000 		.4byte	0x151
 2034 0132 0B       		.uleb128 0xb
 2035 0133 FE030000 		.4byte	.LASF23
 2036 0137 01       		.byte	0x1
 2037 0138 2501     		.2byte	0x125
 2038 013a 77000000 		.4byte	0x77
 2039 013e 02       		.uleb128 0x2
 2040 013f 91       		.byte	0x91
 2041 0140 64       		.sleb128 -28
 2042 0141 0A       		.uleb128 0xa
 2043 0142 69040000 		.4byte	.LASF20
 2044 0146 01       		.byte	0x1
 2045 0147 2701     		.2byte	0x127
 2046 0149 6B000000 		.4byte	0x6b
 2047 014d 02       		.uleb128 0x2
 2048 014e 91       		.byte	0x91
 2049 014f 6F       		.sleb128 -17
 2050 0150 00       		.byte	0
 2051 0151 09       		.uleb128 0x9
 2052 0152 1D010000 		.4byte	.LASF22
 2053 0156 01       		.byte	0x1
 2054 0157 4601     		.2byte	0x146
 2055 0159 00000000 		.4byte	.LFB7
 2056 015d 48000000 		.4byte	.LFE7-.LFB7
 2057 0161 01       		.uleb128 0x1
 2058 0162 9C       		.byte	0x9c
 2059 0163 86010000 		.4byte	0x186
 2060 0167 0B       		.uleb128 0xb
 2061 0168 FC000000 		.4byte	.LASF24
 2062 016c 01       		.byte	0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 62


 2063 016d 4601     		.2byte	0x146
 2064 016f 77000000 		.4byte	0x77
 2065 0173 02       		.uleb128 0x2
 2066 0174 91       		.byte	0x91
 2067 0175 64       		.sleb128 -28
 2068 0176 0A       		.uleb128 0xa
 2069 0177 69040000 		.4byte	.LASF20
 2070 017b 01       		.byte	0x1
 2071 017c 4801     		.2byte	0x148
 2072 017e 6B000000 		.4byte	0x6b
 2073 0182 02       		.uleb128 0x2
 2074 0183 91       		.byte	0x91
 2075 0184 6F       		.sleb128 -17
 2076 0185 00       		.byte	0
 2077 0186 09       		.uleb128 0x9
 2078 0187 C6030000 		.4byte	.LASF25
 2079 018b 01       		.byte	0x1
 2080 018c 6B01     		.2byte	0x16b
 2081 018e 00000000 		.4byte	.LFB8
 2082 0192 48000000 		.4byte	.LFE8-.LFB8
 2083 0196 01       		.uleb128 0x1
 2084 0197 9C       		.byte	0x9c
 2085 0198 BB010000 		.4byte	0x1bb
 2086 019c 0B       		.uleb128 0xb
 2087 019d 39030000 		.4byte	.LASF26
 2088 01a1 01       		.byte	0x1
 2089 01a2 6B01     		.2byte	0x16b
 2090 01a4 77000000 		.4byte	0x77
 2091 01a8 02       		.uleb128 0x2
 2092 01a9 91       		.byte	0x91
 2093 01aa 64       		.sleb128 -28
 2094 01ab 0A       		.uleb128 0xa
 2095 01ac 69040000 		.4byte	.LASF20
 2096 01b0 01       		.byte	0x1
 2097 01b1 6D01     		.2byte	0x16d
 2098 01b3 6B000000 		.4byte	0x6b
 2099 01b7 02       		.uleb128 0x2
 2100 01b8 91       		.byte	0x91
 2101 01b9 6F       		.sleb128 -17
 2102 01ba 00       		.byte	0
 2103 01bb 09       		.uleb128 0x9
 2104 01bc 8F040000 		.4byte	.LASF27
 2105 01c0 01       		.byte	0x1
 2106 01c1 8B01     		.2byte	0x18b
 2107 01c3 00000000 		.4byte	.LFB9
 2108 01c7 4C000000 		.4byte	.LFE9-.LFB9
 2109 01cb 01       		.uleb128 0x1
 2110 01cc 9C       		.byte	0x9c
 2111 01cd F0010000 		.4byte	0x1f0
 2112 01d1 0B       		.uleb128 0xb
 2113 01d2 84020000 		.4byte	.LASF28
 2114 01d6 01       		.byte	0x1
 2115 01d7 8B01     		.2byte	0x18b
 2116 01d9 77000000 		.4byte	0x77
 2117 01dd 02       		.uleb128 0x2
 2118 01de 91       		.byte	0x91
 2119 01df 64       		.sleb128 -28
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 63


 2120 01e0 0A       		.uleb128 0xa
 2121 01e1 69040000 		.4byte	.LASF20
 2122 01e5 01       		.byte	0x1
 2123 01e6 8D01     		.2byte	0x18d
 2124 01e8 6B000000 		.4byte	0x6b
 2125 01ec 02       		.uleb128 0x2
 2126 01ed 91       		.byte	0x91
 2127 01ee 6F       		.sleb128 -17
 2128 01ef 00       		.byte	0
 2129 01f0 0C       		.uleb128 0xc
 2130 01f1 4D050000 		.4byte	.LASF29
 2131 01f5 01       		.byte	0x1
 2132 01f6 C101     		.2byte	0x1c1
 2133 01f8 00000000 		.4byte	.LFB10
 2134 01fc 1C000000 		.4byte	.LFE10-.LFB10
 2135 0200 01       		.uleb128 0x1
 2136 0201 9C       		.byte	0x9c
 2137 0202 16020000 		.4byte	0x216
 2138 0206 0B       		.uleb128 0xb
 2139 0207 2B020000 		.4byte	.LASF30
 2140 020b 01       		.byte	0x1
 2141 020c C101     		.2byte	0x1c1
 2142 020e 77000000 		.4byte	0x77
 2143 0212 02       		.uleb128 0x2
 2144 0213 91       		.byte	0x91
 2145 0214 74       		.sleb128 -12
 2146 0215 00       		.byte	0
 2147 0216 09       		.uleb128 0x9
 2148 0217 E7000000 		.4byte	.LASF31
 2149 021b 01       		.byte	0x1
 2150 021c E501     		.2byte	0x1e5
 2151 021e 00000000 		.4byte	.LFB11
 2152 0222 48000000 		.4byte	.LFE11-.LFB11
 2153 0226 01       		.uleb128 0x1
 2154 0227 9C       		.byte	0x9c
 2155 0228 4B020000 		.4byte	0x24b
 2156 022c 0B       		.uleb128 0xb
 2157 022d EA020000 		.4byte	.LASF32
 2158 0231 01       		.byte	0x1
 2159 0232 E501     		.2byte	0x1e5
 2160 0234 77000000 		.4byte	0x77
 2161 0238 02       		.uleb128 0x2
 2162 0239 91       		.byte	0x91
 2163 023a 64       		.sleb128 -28
 2164 023b 0A       		.uleb128 0xa
 2165 023c 69040000 		.4byte	.LASF20
 2166 0240 01       		.byte	0x1
 2167 0241 E701     		.2byte	0x1e7
 2168 0243 6B000000 		.4byte	0x6b
 2169 0247 02       		.uleb128 0x2
 2170 0248 91       		.byte	0x91
 2171 0249 6F       		.sleb128 -17
 2172 024a 00       		.byte	0
 2173 024b 09       		.uleb128 0x9
 2174 024c 00000000 		.4byte	.LASF33
 2175 0250 01       		.byte	0x1
 2176 0251 0702     		.2byte	0x207
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 64


 2177 0253 00000000 		.4byte	.LFB12
 2178 0257 48000000 		.4byte	.LFE12-.LFB12
 2179 025b 01       		.uleb128 0x1
 2180 025c 9C       		.byte	0x9c
 2181 025d 80020000 		.4byte	0x280
 2182 0261 0B       		.uleb128 0xb
 2183 0262 9D030000 		.4byte	.LASF34
 2184 0266 01       		.byte	0x1
 2185 0267 0702     		.2byte	0x207
 2186 0269 77000000 		.4byte	0x77
 2187 026d 02       		.uleb128 0x2
 2188 026e 91       		.byte	0x91
 2189 026f 64       		.sleb128 -28
 2190 0270 0A       		.uleb128 0xa
 2191 0271 69040000 		.4byte	.LASF20
 2192 0275 01       		.byte	0x1
 2193 0276 0902     		.2byte	0x209
 2194 0278 6B000000 		.4byte	0x6b
 2195 027c 02       		.uleb128 0x2
 2196 027d 91       		.byte	0x91
 2197 027e 6F       		.sleb128 -17
 2198 027f 00       		.byte	0
 2199 0280 09       		.uleb128 0x9
 2200 0281 D2000000 		.4byte	.LASF35
 2201 0285 01       		.byte	0x1
 2202 0286 2802     		.2byte	0x228
 2203 0288 00000000 		.4byte	.LFB13
 2204 028c 4C000000 		.4byte	.LFE13-.LFB13
 2205 0290 01       		.uleb128 0x1
 2206 0291 9C       		.byte	0x9c
 2207 0292 B5020000 		.4byte	0x2b5
 2208 0296 0B       		.uleb128 0xb
 2209 0297 D9010000 		.4byte	.LASF36
 2210 029b 01       		.byte	0x1
 2211 029c 2802     		.2byte	0x228
 2212 029e 77000000 		.4byte	0x77
 2213 02a2 02       		.uleb128 0x2
 2214 02a3 91       		.byte	0x91
 2215 02a4 64       		.sleb128 -28
 2216 02a5 0A       		.uleb128 0xa
 2217 02a6 69040000 		.4byte	.LASF20
 2218 02aa 01       		.byte	0x1
 2219 02ab 2A02     		.2byte	0x22a
 2220 02ad 6B000000 		.4byte	0x6b
 2221 02b1 02       		.uleb128 0x2
 2222 02b2 91       		.byte	0x91
 2223 02b3 6F       		.sleb128 -17
 2224 02b4 00       		.byte	0
 2225 02b5 09       		.uleb128 0x9
 2226 02b6 F9020000 		.4byte	.LASF37
 2227 02ba 01       		.byte	0x1
 2228 02bb 4902     		.2byte	0x249
 2229 02bd 00000000 		.4byte	.LFB14
 2230 02c1 48000000 		.4byte	.LFE14-.LFB14
 2231 02c5 01       		.uleb128 0x1
 2232 02c6 9C       		.byte	0x9c
 2233 02c7 EA020000 		.4byte	0x2ea
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 65


 2234 02cb 0B       		.uleb128 0xb
 2235 02cc C2010000 		.4byte	.LASF38
 2236 02d0 01       		.byte	0x1
 2237 02d1 4902     		.2byte	0x249
 2238 02d3 77000000 		.4byte	0x77
 2239 02d7 02       		.uleb128 0x2
 2240 02d8 91       		.byte	0x91
 2241 02d9 64       		.sleb128 -28
 2242 02da 0A       		.uleb128 0xa
 2243 02db 69040000 		.4byte	.LASF20
 2244 02df 01       		.byte	0x1
 2245 02e0 4B02     		.2byte	0x24b
 2246 02e2 6B000000 		.4byte	0x6b
 2247 02e6 02       		.uleb128 0x2
 2248 02e7 91       		.byte	0x91
 2249 02e8 6F       		.sleb128 -17
 2250 02e9 00       		.byte	0
 2251 02ea 0C       		.uleb128 0xc
 2252 02eb 54020000 		.4byte	.LASF39
 2253 02ef 01       		.byte	0x1
 2254 02f0 6702     		.2byte	0x267
 2255 02f2 00000000 		.4byte	.LFB15
 2256 02f6 1C000000 		.4byte	.LFE15-.LFB15
 2257 02fa 01       		.uleb128 0x1
 2258 02fb 9C       		.byte	0x9c
 2259 02fc 10030000 		.4byte	0x310
 2260 0300 0B       		.uleb128 0xb
 2261 0301 17000000 		.4byte	.LASF40
 2262 0305 01       		.byte	0x1
 2263 0306 6702     		.2byte	0x267
 2264 0308 77000000 		.4byte	0x77
 2265 030c 02       		.uleb128 0x2
 2266 030d 91       		.byte	0x91
 2267 030e 74       		.sleb128 -12
 2268 030f 00       		.byte	0
 2269 0310 0D       		.uleb128 0xd
 2270 0311 67020000 		.4byte	.LASF45
 2271 0315 01       		.byte	0x1
 2272 0316 7B02     		.2byte	0x27b
 2273 0318 77000000 		.4byte	0x77
 2274 031c 00000000 		.4byte	.LFB16
 2275 0320 18000000 		.4byte	.LFE16-.LFB16
 2276 0324 01       		.uleb128 0x1
 2277 0325 9C       		.byte	0x9c
 2278 0326 09       		.uleb128 0x9
 2279 0327 E4030000 		.4byte	.LASF41
 2280 032b 01       		.byte	0x1
 2281 032c 9802     		.2byte	0x298
 2282 032e 00000000 		.4byte	.LFB17
 2283 0332 48000000 		.4byte	.LFE17-.LFB17
 2284 0336 01       		.uleb128 0x1
 2285 0337 9C       		.byte	0x9c
 2286 0338 5B030000 		.4byte	0x35b
 2287 033c 0B       		.uleb128 0xb
 2288 033d 17040000 		.4byte	.LASF42
 2289 0341 01       		.byte	0x1
 2290 0342 9802     		.2byte	0x298
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 66


 2291 0344 77000000 		.4byte	0x77
 2292 0348 02       		.uleb128 0x2
 2293 0349 91       		.byte	0x91
 2294 034a 64       		.sleb128 -28
 2295 034b 0A       		.uleb128 0xa
 2296 034c 69040000 		.4byte	.LASF20
 2297 0350 01       		.byte	0x1
 2298 0351 9A02     		.2byte	0x29a
 2299 0353 6B000000 		.4byte	0x6b
 2300 0357 02       		.uleb128 0x2
 2301 0358 91       		.byte	0x91
 2302 0359 6F       		.sleb128 -17
 2303 035a 00       		.byte	0
 2304 035b 0C       		.uleb128 0xc
 2305 035c 73000000 		.4byte	.LASF43
 2306 0360 01       		.byte	0x1
 2307 0361 B502     		.2byte	0x2b5
 2308 0363 00000000 		.4byte	.LFB18
 2309 0367 1C000000 		.4byte	.LFE18-.LFB18
 2310 036b 01       		.uleb128 0x1
 2311 036c 9C       		.byte	0x9c
 2312 036d 81030000 		.4byte	0x381
 2313 0371 0B       		.uleb128 0xb
 2314 0372 98000000 		.4byte	.LASF44
 2315 0376 01       		.byte	0x1
 2316 0377 B502     		.2byte	0x2b5
 2317 0379 77000000 		.4byte	0x77
 2318 037d 02       		.uleb128 0x2
 2319 037e 91       		.byte	0x91
 2320 037f 74       		.sleb128 -12
 2321 0380 00       		.byte	0
 2322 0381 0D       		.uleb128 0xd
 2323 0382 2E040000 		.4byte	.LASF46
 2324 0386 01       		.byte	0x1
 2325 0387 C902     		.2byte	0x2c9
 2326 0389 77000000 		.4byte	0x77
 2327 038d 00000000 		.4byte	.LFB19
 2328 0391 18000000 		.4byte	.LFE19-.LFB19
 2329 0395 01       		.uleb128 0x1
 2330 0396 9C       		.byte	0x9c
 2331 0397 09       		.uleb128 0x9
 2332 0398 B7020000 		.4byte	.LASF47
 2333 039c 01       		.byte	0x1
 2334 039d E302     		.2byte	0x2e3
 2335 039f 00000000 		.4byte	.LFB20
 2336 03a3 48000000 		.4byte	.LFE20-.LFB20
 2337 03a7 01       		.uleb128 0x1
 2338 03a8 9C       		.byte	0x9c
 2339 03a9 CC030000 		.4byte	0x3cc
 2340 03ad 0B       		.uleb128 0xb
 2341 03ae 23040000 		.4byte	.LASF48
 2342 03b2 01       		.byte	0x1
 2343 03b3 E302     		.2byte	0x2e3
 2344 03b5 77000000 		.4byte	0x77
 2345 03b9 02       		.uleb128 0x2
 2346 03ba 91       		.byte	0x91
 2347 03bb 64       		.sleb128 -28
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 67


 2348 03bc 0A       		.uleb128 0xa
 2349 03bd 69040000 		.4byte	.LASF20
 2350 03c1 01       		.byte	0x1
 2351 03c2 E502     		.2byte	0x2e5
 2352 03c4 6B000000 		.4byte	0x6b
 2353 03c8 02       		.uleb128 0x2
 2354 03c9 91       		.byte	0x91
 2355 03ca 6F       		.sleb128 -17
 2356 03cb 00       		.byte	0
 2357 03cc 0C       		.uleb128 0xc
 2358 03cd D5020000 		.4byte	.LASF49
 2359 03d1 01       		.byte	0x1
 2360 03d2 FE02     		.2byte	0x2fe
 2361 03d4 00000000 		.4byte	.LFB21
 2362 03d8 1C000000 		.4byte	.LFE21-.LFB21
 2363 03dc 01       		.uleb128 0x1
 2364 03dd 9C       		.byte	0x9c
 2365 03de F2030000 		.4byte	0x3f2
 2366 03e2 0B       		.uleb128 0xb
 2367 03e3 43050000 		.4byte	.LASF50
 2368 03e7 01       		.byte	0x1
 2369 03e8 FE02     		.2byte	0x2fe
 2370 03ea 77000000 		.4byte	0x77
 2371 03ee 02       		.uleb128 0x2
 2372 03ef 91       		.byte	0x91
 2373 03f0 74       		.sleb128 -12
 2374 03f1 00       		.byte	0
 2375 03f2 0D       		.uleb128 0xd
 2376 03f3 0C030000 		.4byte	.LASF51
 2377 03f7 01       		.byte	0x1
 2378 03f8 1203     		.2byte	0x312
 2379 03fa 77000000 		.4byte	0x77
 2380 03fe 00000000 		.4byte	.LFB22
 2381 0402 18000000 		.4byte	.LFE22-.LFB22
 2382 0406 01       		.uleb128 0x1
 2383 0407 9C       		.byte	0x9c
 2384 0408 09       		.uleb128 0x9
 2385 0409 55030000 		.4byte	.LASF52
 2386 040d 01       		.byte	0x1
 2387 040e 2C03     		.2byte	0x32c
 2388 0410 00000000 		.4byte	.LFB23
 2389 0414 48000000 		.4byte	.LFE23-.LFB23
 2390 0418 01       		.uleb128 0x1
 2391 0419 9C       		.byte	0x9c
 2392 041a 3D040000 		.4byte	0x43d
 2393 041e 0B       		.uleb128 0xb
 2394 041f 23040000 		.4byte	.LASF48
 2395 0423 01       		.byte	0x1
 2396 0424 2C03     		.2byte	0x32c
 2397 0426 77000000 		.4byte	0x77
 2398 042a 02       		.uleb128 0x2
 2399 042b 91       		.byte	0x91
 2400 042c 64       		.sleb128 -28
 2401 042d 0A       		.uleb128 0xa
 2402 042e 69040000 		.4byte	.LASF20
 2403 0432 01       		.byte	0x1
 2404 0433 2E03     		.2byte	0x32e
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 68


 2405 0435 6B000000 		.4byte	0x6b
 2406 0439 02       		.uleb128 0x2
 2407 043a 91       		.byte	0x91
 2408 043b 6F       		.sleb128 -17
 2409 043c 00       		.byte	0
 2410 043d 0C       		.uleb128 0xc
 2411 043e A3010000 		.4byte	.LASF53
 2412 0442 01       		.byte	0x1
 2413 0443 5103     		.2byte	0x351
 2414 0445 00000000 		.4byte	.LFB24
 2415 0449 1C000000 		.4byte	.LFE24-.LFB24
 2416 044d 01       		.uleb128 0x1
 2417 044e 9C       		.byte	0x9c
 2418 044f 63040000 		.4byte	0x463
 2419 0453 0B       		.uleb128 0xb
 2420 0454 40010000 		.4byte	.LASF54
 2421 0458 01       		.byte	0x1
 2422 0459 5103     		.2byte	0x351
 2423 045b 77000000 		.4byte	0x77
 2424 045f 02       		.uleb128 0x2
 2425 0460 91       		.byte	0x91
 2426 0461 74       		.sleb128 -12
 2427 0462 00       		.byte	0
 2428 0463 0D       		.uleb128 0xd
 2429 0464 C7010000 		.4byte	.LASF55
 2430 0468 01       		.byte	0x1
 2431 0469 8403     		.2byte	0x384
 2432 046b 77000000 		.4byte	0x77
 2433 046f 00000000 		.4byte	.LFB25
 2434 0473 18000000 		.4byte	.LFE25-.LFB25
 2435 0477 01       		.uleb128 0x1
 2436 0478 9C       		.byte	0x9c
 2437 0479 0C       		.uleb128 0xc
 2438 047a E2010000 		.4byte	.LASF56
 2439 047e 01       		.byte	0x1
 2440 047f BA03     		.2byte	0x3ba
 2441 0481 00000000 		.4byte	.LFB26
 2442 0485 1C000000 		.4byte	.LFE26-.LFB26
 2443 0489 01       		.uleb128 0x1
 2444 048a 9C       		.byte	0x9c
 2445 048b 9F040000 		.4byte	0x49f
 2446 048f 0B       		.uleb128 0xb
 2447 0490 3F040000 		.4byte	.LASF57
 2448 0494 01       		.byte	0x1
 2449 0495 BA03     		.2byte	0x3ba
 2450 0497 77000000 		.4byte	0x77
 2451 049b 02       		.uleb128 0x2
 2452 049c 91       		.byte	0x91
 2453 049d 74       		.sleb128 -12
 2454 049e 00       		.byte	0
 2455 049f 0D       		.uleb128 0xd
 2456 04a0 5E050000 		.4byte	.LASF58
 2457 04a4 01       		.byte	0x1
 2458 04a5 E803     		.2byte	0x3e8
 2459 04a7 77000000 		.4byte	0x77
 2460 04ab 00000000 		.4byte	.LFB27
 2461 04af 18000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 69


 2462 04b3 01       		.uleb128 0x1
 2463 04b4 9C       		.byte	0x9c
 2464 04b5 0D       		.uleb128 0xd
 2465 04b6 51010000 		.4byte	.LASF59
 2466 04ba 01       		.byte	0x1
 2467 04bb 1604     		.2byte	0x416
 2468 04bd 77000000 		.4byte	0x77
 2469 04c1 00000000 		.4byte	.LFB28
 2470 04c5 18000000 		.4byte	.LFE28-.LFB28
 2471 04c9 01       		.uleb128 0x1
 2472 04ca 9C       		.byte	0x9c
 2473 04cb 0D       		.uleb128 0xd
 2474 04cc 69030000 		.4byte	.LASF60
 2475 04d0 01       		.byte	0x1
 2476 04d1 2B04     		.2byte	0x42b
 2477 04d3 77000000 		.4byte	0x77
 2478 04d7 00000000 		.4byte	.LFB29
 2479 04db 18000000 		.4byte	.LFE29-.LFB29
 2480 04df 01       		.uleb128 0x1
 2481 04e0 9C       		.byte	0x9c
 2482 04e1 09       		.uleb128 0x9
 2483 04e2 7A040000 		.4byte	.LASF61
 2484 04e6 01       		.byte	0x1
 2485 04e7 4604     		.2byte	0x446
 2486 04e9 00000000 		.4byte	.LFB30
 2487 04ed 44000000 		.4byte	.LFE30-.LFB30
 2488 04f1 01       		.uleb128 0x1
 2489 04f2 9C       		.byte	0x9c
 2490 04f3 16050000 		.4byte	0x516
 2491 04f7 0B       		.uleb128 0xb
 2492 04f8 B6010000 		.4byte	.LASF62
 2493 04fc 01       		.byte	0x1
 2494 04fd 4604     		.2byte	0x446
 2495 04ff 77000000 		.4byte	0x77
 2496 0503 02       		.uleb128 0x2
 2497 0504 91       		.byte	0x91
 2498 0505 64       		.sleb128 -28
 2499 0506 0A       		.uleb128 0xa
 2500 0507 69040000 		.4byte	.LASF20
 2501 050b 01       		.byte	0x1
 2502 050c 4804     		.2byte	0x448
 2503 050e 6B000000 		.4byte	0x6b
 2504 0512 02       		.uleb128 0x2
 2505 0513 91       		.byte	0x91
 2506 0514 6F       		.sleb128 -17
 2507 0515 00       		.byte	0
 2508 0516 09       		.uleb128 0x9
 2509 0517 03040000 		.4byte	.LASF63
 2510 051b 01       		.byte	0x1
 2511 051c 6704     		.2byte	0x467
 2512 051e 00000000 		.4byte	.LFB31
 2513 0522 44000000 		.4byte	.LFE31-.LFB31
 2514 0526 01       		.uleb128 0x1
 2515 0527 9C       		.byte	0x9c
 2516 0528 4B050000 		.4byte	0x54b
 2517 052c 0B       		.uleb128 0xb
 2518 052d B6010000 		.4byte	.LASF62
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 70


 2519 0531 01       		.byte	0x1
 2520 0532 6704     		.2byte	0x467
 2521 0534 77000000 		.4byte	0x77
 2522 0538 02       		.uleb128 0x2
 2523 0539 91       		.byte	0x91
 2524 053a 64       		.sleb128 -28
 2525 053b 0A       		.uleb128 0xa
 2526 053c 69040000 		.4byte	.LASF20
 2527 0540 01       		.byte	0x1
 2528 0541 6904     		.2byte	0x469
 2529 0543 6B000000 		.4byte	0x6b
 2530 0547 02       		.uleb128 0x2
 2531 0548 91       		.byte	0x91
 2532 0549 6F       		.sleb128 -17
 2533 054a 00       		.byte	0
 2534 054b 09       		.uleb128 0x9
 2535 054c 20030000 		.4byte	.LASF64
 2536 0550 01       		.byte	0x1
 2537 0551 8804     		.2byte	0x488
 2538 0553 00000000 		.4byte	.LFB32
 2539 0557 48000000 		.4byte	.LFE32-.LFB32
 2540 055b 01       		.uleb128 0x1
 2541 055c 9C       		.byte	0x9c
 2542 055d 80050000 		.4byte	0x580
 2543 0561 0B       		.uleb128 0xb
 2544 0562 B6010000 		.4byte	.LASF62
 2545 0566 01       		.byte	0x1
 2546 0567 8804     		.2byte	0x488
 2547 0569 77000000 		.4byte	0x77
 2548 056d 02       		.uleb128 0x2
 2549 056e 91       		.byte	0x91
 2550 056f 64       		.sleb128 -28
 2551 0570 0A       		.uleb128 0xa
 2552 0571 69040000 		.4byte	.LASF20
 2553 0575 01       		.byte	0x1
 2554 0576 8A04     		.2byte	0x48a
 2555 0578 6B000000 		.4byte	0x6b
 2556 057c 02       		.uleb128 0x2
 2557 057d 91       		.byte	0x91
 2558 057e 6F       		.sleb128 -17
 2559 057f 00       		.byte	0
 2560 0580 09       		.uleb128 0x9
 2561 0581 43030000 		.4byte	.LASF65
 2562 0585 01       		.byte	0x1
 2563 0586 A804     		.2byte	0x4a8
 2564 0588 00000000 		.4byte	.LFB33
 2565 058c 44000000 		.4byte	.LFE33-.LFB33
 2566 0590 01       		.uleb128 0x1
 2567 0591 9C       		.byte	0x9c
 2568 0592 B5050000 		.4byte	0x5b5
 2569 0596 0B       		.uleb128 0xb
 2570 0597 B6010000 		.4byte	.LASF62
 2571 059b 01       		.byte	0x1
 2572 059c A804     		.2byte	0x4a8
 2573 059e 77000000 		.4byte	0x77
 2574 05a2 02       		.uleb128 0x2
 2575 05a3 91       		.byte	0x91
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 71


 2576 05a4 64       		.sleb128 -28
 2577 05a5 0A       		.uleb128 0xa
 2578 05a6 69040000 		.4byte	.LASF20
 2579 05aa 01       		.byte	0x1
 2580 05ab AA04     		.2byte	0x4aa
 2581 05ad 6B000000 		.4byte	0x6b
 2582 05b1 02       		.uleb128 0x2
 2583 05b2 91       		.byte	0x91
 2584 05b3 6F       		.sleb128 -17
 2585 05b4 00       		.byte	0
 2586 05b5 09       		.uleb128 0x9
 2587 05b6 2D010000 		.4byte	.LASF66
 2588 05ba 01       		.byte	0x1
 2589 05bb C904     		.2byte	0x4c9
 2590 05bd 00000000 		.4byte	.LFB34
 2591 05c1 44000000 		.4byte	.LFE34-.LFB34
 2592 05c5 01       		.uleb128 0x1
 2593 05c6 9C       		.byte	0x9c
 2594 05c7 EA050000 		.4byte	0x5ea
 2595 05cb 0B       		.uleb128 0xb
 2596 05cc B6010000 		.4byte	.LASF62
 2597 05d0 01       		.byte	0x1
 2598 05d1 C904     		.2byte	0x4c9
 2599 05d3 77000000 		.4byte	0x77
 2600 05d7 02       		.uleb128 0x2
 2601 05d8 91       		.byte	0x91
 2602 05d9 64       		.sleb128 -28
 2603 05da 0A       		.uleb128 0xa
 2604 05db 69040000 		.4byte	.LASF20
 2605 05df 01       		.byte	0x1
 2606 05e0 CB04     		.2byte	0x4cb
 2607 05e2 6B000000 		.4byte	0x6b
 2608 05e6 02       		.uleb128 0x2
 2609 05e7 91       		.byte	0x91
 2610 05e8 6F       		.sleb128 -17
 2611 05e9 00       		.byte	0
 2612 05ea 09       		.uleb128 0x9
 2613 05eb 63010000 		.4byte	.LASF67
 2614 05ef 01       		.byte	0x1
 2615 05f0 F104     		.2byte	0x4f1
 2616 05f2 00000000 		.4byte	.LFB35
 2617 05f6 38000000 		.4byte	.LFE35-.LFB35
 2618 05fa 01       		.uleb128 0x1
 2619 05fb 9C       		.byte	0x9c
 2620 05fc 2E060000 		.4byte	0x62e
 2621 0600 0B       		.uleb128 0xb
 2622 0601 C2010000 		.4byte	.LASF38
 2623 0605 01       		.byte	0x1
 2624 0606 F104     		.2byte	0x4f1
 2625 0608 77000000 		.4byte	0x77
 2626 060c 02       		.uleb128 0x2
 2627 060d 91       		.byte	0x91
 2628 060e 64       		.sleb128 -28
 2629 060f 0B       		.uleb128 0xb
 2630 0610 11020000 		.4byte	.LASF68
 2631 0614 01       		.byte	0x1
 2632 0615 F104     		.2byte	0x4f1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 72


 2633 0617 77000000 		.4byte	0x77
 2634 061b 02       		.uleb128 0x2
 2635 061c 91       		.byte	0x91
 2636 061d 60       		.sleb128 -32
 2637 061e 0A       		.uleb128 0xa
 2638 061f 69040000 		.4byte	.LASF20
 2639 0623 01       		.byte	0x1
 2640 0624 F304     		.2byte	0x4f3
 2641 0626 6B000000 		.4byte	0x6b
 2642 062a 02       		.uleb128 0x2
 2643 062b 91       		.byte	0x91
 2644 062c 6F       		.sleb128 -17
 2645 062d 00       		.byte	0
 2646 062e 0D       		.uleb128 0xd
 2647 062f 7E030000 		.4byte	.LASF69
 2648 0633 01       		.byte	0x1
 2649 0634 0E05     		.2byte	0x50e
 2650 0636 77000000 		.4byte	0x77
 2651 063a 00000000 		.4byte	.LFB36
 2652 063e 20000000 		.4byte	.LFE36-.LFB36
 2653 0642 01       		.uleb128 0x1
 2654 0643 9C       		.byte	0x9c
 2655 0644 0C       		.uleb128 0xc
 2656 0645 85010000 		.4byte	.LASF70
 2657 0649 01       		.byte	0x1
 2658 064a 2705     		.2byte	0x527
 2659 064c 00000000 		.4byte	.LFB37
 2660 0650 18000000 		.4byte	.LFE37-.LFB37
 2661 0654 01       		.uleb128 0x1
 2662 0655 9C       		.byte	0x9c
 2663 0656 6A060000 		.4byte	0x66a
 2664 065a 0B       		.uleb128 0xb
 2665 065b B8030000 		.4byte	.LASF71
 2666 065f 01       		.byte	0x1
 2667 0660 2705     		.2byte	0x527
 2668 0662 77000000 		.4byte	0x77
 2669 0666 02       		.uleb128 0x2
 2670 0667 91       		.byte	0x91
 2671 0668 74       		.sleb128 -12
 2672 0669 00       		.byte	0
 2673 066a 0D       		.uleb128 0xd
 2674 066b 92020000 		.4byte	.LASF72
 2675 066f 01       		.byte	0x1
 2676 0670 3E05     		.2byte	0x53e
 2677 0672 77000000 		.4byte	0x77
 2678 0676 00000000 		.4byte	.LFB38
 2679 067a 14000000 		.4byte	.LFE38-.LFB38
 2680 067e 01       		.uleb128 0x1
 2681 067f 9C       		.byte	0x9c
 2682 0680 0D       		.uleb128 0xd
 2683 0681 1D000000 		.4byte	.LASF73
 2684 0685 01       		.byte	0x1
 2685 0686 5505     		.2byte	0x555
 2686 0688 77000000 		.4byte	0x77
 2687 068c 00000000 		.4byte	.LFB39
 2688 0690 14000000 		.4byte	.LFE39-.LFB39
 2689 0694 01       		.uleb128 0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 73


 2690 0695 9C       		.byte	0x9c
 2691 0696 0C       		.uleb128 0xc
 2692 0697 A0040000 		.4byte	.LASF74
 2693 069b 01       		.byte	0x1
 2694 069c 6C05     		.2byte	0x56c
 2695 069e 00000000 		.4byte	.LFB40
 2696 06a2 18000000 		.4byte	.LFE40-.LFB40
 2697 06a6 01       		.uleb128 0x1
 2698 06a7 9C       		.byte	0x9c
 2699 06a8 BC060000 		.4byte	0x6bc
 2700 06ac 0B       		.uleb128 0xb
 2701 06ad B8030000 		.4byte	.LASF71
 2702 06b1 01       		.byte	0x1
 2703 06b2 6C05     		.2byte	0x56c
 2704 06b4 77000000 		.4byte	0x77
 2705 06b8 02       		.uleb128 0x2
 2706 06b9 91       		.byte	0x91
 2707 06ba 74       		.sleb128 -12
 2708 06bb 00       		.byte	0
 2709 06bc 0C       		.uleb128 0xc
 2710 06bd 85000000 		.4byte	.LASF75
 2711 06c1 01       		.byte	0x1
 2712 06c2 8305     		.2byte	0x583
 2713 06c4 00000000 		.4byte	.LFB41
 2714 06c8 18000000 		.4byte	.LFE41-.LFB41
 2715 06cc 01       		.uleb128 0x1
 2716 06cd 9C       		.byte	0x9c
 2717 06ce E2060000 		.4byte	0x6e2
 2718 06d2 0B       		.uleb128 0xb
 2719 06d3 B8030000 		.4byte	.LASF71
 2720 06d7 01       		.byte	0x1
 2721 06d8 8305     		.2byte	0x583
 2722 06da 77000000 		.4byte	0x77
 2723 06de 02       		.uleb128 0x2
 2724 06df 91       		.byte	0x91
 2725 06e0 74       		.sleb128 -12
 2726 06e1 00       		.byte	0
 2727 06e2 0E       		.uleb128 0xe
 2728 06e3 AD000000 		.4byte	.LASF79
 2729 06e7 01       		.byte	0x1
 2730 06e8 15       		.byte	0x15
 2731 06e9 6B000000 		.4byte	0x6b
 2732 06ed 05       		.uleb128 0x5
 2733 06ee 03       		.byte	0x3
 2734 06ef 00000000 		.4byte	Timer_initVar
 2735 06f3 00       		.byte	0
 2736              		.section	.debug_abbrev,"",%progbits
 2737              	.Ldebug_abbrev0:
 2738 0000 01       		.uleb128 0x1
 2739 0001 11       		.uleb128 0x11
 2740 0002 01       		.byte	0x1
 2741 0003 25       		.uleb128 0x25
 2742 0004 0E       		.uleb128 0xe
 2743 0005 13       		.uleb128 0x13
 2744 0006 0B       		.uleb128 0xb
 2745 0007 03       		.uleb128 0x3
 2746 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 74


 2747 0009 1B       		.uleb128 0x1b
 2748 000a 0E       		.uleb128 0xe
 2749 000b 55       		.uleb128 0x55
 2750 000c 17       		.uleb128 0x17
 2751 000d 11       		.uleb128 0x11
 2752 000e 01       		.uleb128 0x1
 2753 000f 10       		.uleb128 0x10
 2754 0010 17       		.uleb128 0x17
 2755 0011 00       		.byte	0
 2756 0012 00       		.byte	0
 2757 0013 02       		.uleb128 0x2
 2758 0014 24       		.uleb128 0x24
 2759 0015 00       		.byte	0
 2760 0016 0B       		.uleb128 0xb
 2761 0017 0B       		.uleb128 0xb
 2762 0018 3E       		.uleb128 0x3e
 2763 0019 0B       		.uleb128 0xb
 2764 001a 03       		.uleb128 0x3
 2765 001b 0E       		.uleb128 0xe
 2766 001c 00       		.byte	0
 2767 001d 00       		.byte	0
 2768 001e 03       		.uleb128 0x3
 2769 001f 24       		.uleb128 0x24
 2770 0020 00       		.byte	0
 2771 0021 0B       		.uleb128 0xb
 2772 0022 0B       		.uleb128 0xb
 2773 0023 3E       		.uleb128 0x3e
 2774 0024 0B       		.uleb128 0xb
 2775 0025 03       		.uleb128 0x3
 2776 0026 08       		.uleb128 0x8
 2777 0027 00       		.byte	0
 2778 0028 00       		.byte	0
 2779 0029 04       		.uleb128 0x4
 2780 002a 16       		.uleb128 0x16
 2781 002b 00       		.byte	0
 2782 002c 03       		.uleb128 0x3
 2783 002d 0E       		.uleb128 0xe
 2784 002e 3A       		.uleb128 0x3a
 2785 002f 0B       		.uleb128 0xb
 2786 0030 3B       		.uleb128 0x3b
 2787 0031 05       		.uleb128 0x5
 2788 0032 49       		.uleb128 0x49
 2789 0033 13       		.uleb128 0x13
 2790 0034 00       		.byte	0
 2791 0035 00       		.byte	0
 2792 0036 05       		.uleb128 0x5
 2793 0037 35       		.uleb128 0x35
 2794 0038 00       		.byte	0
 2795 0039 49       		.uleb128 0x49
 2796 003a 13       		.uleb128 0x13
 2797 003b 00       		.byte	0
 2798 003c 00       		.byte	0
 2799 003d 06       		.uleb128 0x6
 2800 003e 2E       		.uleb128 0x2e
 2801 003f 00       		.byte	0
 2802 0040 3F       		.uleb128 0x3f
 2803 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 75


 2804 0042 03       		.uleb128 0x3
 2805 0043 0E       		.uleb128 0xe
 2806 0044 3A       		.uleb128 0x3a
 2807 0045 0B       		.uleb128 0xb
 2808 0046 3B       		.uleb128 0x3b
 2809 0047 0B       		.uleb128 0xb
 2810 0048 27       		.uleb128 0x27
 2811 0049 19       		.uleb128 0x19
 2812 004a 11       		.uleb128 0x11
 2813 004b 01       		.uleb128 0x1
 2814 004c 12       		.uleb128 0x12
 2815 004d 06       		.uleb128 0x6
 2816 004e 40       		.uleb128 0x40
 2817 004f 18       		.uleb128 0x18
 2818 0050 9642     		.uleb128 0x2116
 2819 0052 19       		.uleb128 0x19
 2820 0053 00       		.byte	0
 2821 0054 00       		.byte	0
 2822 0055 07       		.uleb128 0x7
 2823 0056 2E       		.uleb128 0x2e
 2824 0057 01       		.byte	0x1
 2825 0058 3F       		.uleb128 0x3f
 2826 0059 19       		.uleb128 0x19
 2827 005a 03       		.uleb128 0x3
 2828 005b 0E       		.uleb128 0xe
 2829 005c 3A       		.uleb128 0x3a
 2830 005d 0B       		.uleb128 0xb
 2831 005e 3B       		.uleb128 0x3b
 2832 005f 0B       		.uleb128 0xb
 2833 0060 27       		.uleb128 0x27
 2834 0061 19       		.uleb128 0x19
 2835 0062 11       		.uleb128 0x11
 2836 0063 01       		.uleb128 0x1
 2837 0064 12       		.uleb128 0x12
 2838 0065 06       		.uleb128 0x6
 2839 0066 40       		.uleb128 0x40
 2840 0067 18       		.uleb128 0x18
 2841 0068 9642     		.uleb128 0x2116
 2842 006a 19       		.uleb128 0x19
 2843 006b 01       		.uleb128 0x1
 2844 006c 13       		.uleb128 0x13
 2845 006d 00       		.byte	0
 2846 006e 00       		.byte	0
 2847 006f 08       		.uleb128 0x8
 2848 0070 34       		.uleb128 0x34
 2849 0071 00       		.byte	0
 2850 0072 03       		.uleb128 0x3
 2851 0073 0E       		.uleb128 0xe
 2852 0074 3A       		.uleb128 0x3a
 2853 0075 0B       		.uleb128 0xb
 2854 0076 3B       		.uleb128 0x3b
 2855 0077 0B       		.uleb128 0xb
 2856 0078 49       		.uleb128 0x49
 2857 0079 13       		.uleb128 0x13
 2858 007a 02       		.uleb128 0x2
 2859 007b 18       		.uleb128 0x18
 2860 007c 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 76


 2861 007d 00       		.byte	0
 2862 007e 09       		.uleb128 0x9
 2863 007f 2E       		.uleb128 0x2e
 2864 0080 01       		.byte	0x1
 2865 0081 3F       		.uleb128 0x3f
 2866 0082 19       		.uleb128 0x19
 2867 0083 03       		.uleb128 0x3
 2868 0084 0E       		.uleb128 0xe
 2869 0085 3A       		.uleb128 0x3a
 2870 0086 0B       		.uleb128 0xb
 2871 0087 3B       		.uleb128 0x3b
 2872 0088 05       		.uleb128 0x5
 2873 0089 27       		.uleb128 0x27
 2874 008a 19       		.uleb128 0x19
 2875 008b 11       		.uleb128 0x11
 2876 008c 01       		.uleb128 0x1
 2877 008d 12       		.uleb128 0x12
 2878 008e 06       		.uleb128 0x6
 2879 008f 40       		.uleb128 0x40
 2880 0090 18       		.uleb128 0x18
 2881 0091 9642     		.uleb128 0x2116
 2882 0093 19       		.uleb128 0x19
 2883 0094 01       		.uleb128 0x1
 2884 0095 13       		.uleb128 0x13
 2885 0096 00       		.byte	0
 2886 0097 00       		.byte	0
 2887 0098 0A       		.uleb128 0xa
 2888 0099 34       		.uleb128 0x34
 2889 009a 00       		.byte	0
 2890 009b 03       		.uleb128 0x3
 2891 009c 0E       		.uleb128 0xe
 2892 009d 3A       		.uleb128 0x3a
 2893 009e 0B       		.uleb128 0xb
 2894 009f 3B       		.uleb128 0x3b
 2895 00a0 05       		.uleb128 0x5
 2896 00a1 49       		.uleb128 0x49
 2897 00a2 13       		.uleb128 0x13
 2898 00a3 02       		.uleb128 0x2
 2899 00a4 18       		.uleb128 0x18
 2900 00a5 00       		.byte	0
 2901 00a6 00       		.byte	0
 2902 00a7 0B       		.uleb128 0xb
 2903 00a8 05       		.uleb128 0x5
 2904 00a9 00       		.byte	0
 2905 00aa 03       		.uleb128 0x3
 2906 00ab 0E       		.uleb128 0xe
 2907 00ac 3A       		.uleb128 0x3a
 2908 00ad 0B       		.uleb128 0xb
 2909 00ae 3B       		.uleb128 0x3b
 2910 00af 05       		.uleb128 0x5
 2911 00b0 49       		.uleb128 0x49
 2912 00b1 13       		.uleb128 0x13
 2913 00b2 02       		.uleb128 0x2
 2914 00b3 18       		.uleb128 0x18
 2915 00b4 00       		.byte	0
 2916 00b5 00       		.byte	0
 2917 00b6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 77


 2918 00b7 2E       		.uleb128 0x2e
 2919 00b8 01       		.byte	0x1
 2920 00b9 3F       		.uleb128 0x3f
 2921 00ba 19       		.uleb128 0x19
 2922 00bb 03       		.uleb128 0x3
 2923 00bc 0E       		.uleb128 0xe
 2924 00bd 3A       		.uleb128 0x3a
 2925 00be 0B       		.uleb128 0xb
 2926 00bf 3B       		.uleb128 0x3b
 2927 00c0 05       		.uleb128 0x5
 2928 00c1 27       		.uleb128 0x27
 2929 00c2 19       		.uleb128 0x19
 2930 00c3 11       		.uleb128 0x11
 2931 00c4 01       		.uleb128 0x1
 2932 00c5 12       		.uleb128 0x12
 2933 00c6 06       		.uleb128 0x6
 2934 00c7 40       		.uleb128 0x40
 2935 00c8 18       		.uleb128 0x18
 2936 00c9 9742     		.uleb128 0x2117
 2937 00cb 19       		.uleb128 0x19
 2938 00cc 01       		.uleb128 0x1
 2939 00cd 13       		.uleb128 0x13
 2940 00ce 00       		.byte	0
 2941 00cf 00       		.byte	0
 2942 00d0 0D       		.uleb128 0xd
 2943 00d1 2E       		.uleb128 0x2e
 2944 00d2 00       		.byte	0
 2945 00d3 3F       		.uleb128 0x3f
 2946 00d4 19       		.uleb128 0x19
 2947 00d5 03       		.uleb128 0x3
 2948 00d6 0E       		.uleb128 0xe
 2949 00d7 3A       		.uleb128 0x3a
 2950 00d8 0B       		.uleb128 0xb
 2951 00d9 3B       		.uleb128 0x3b
 2952 00da 05       		.uleb128 0x5
 2953 00db 27       		.uleb128 0x27
 2954 00dc 19       		.uleb128 0x19
 2955 00dd 49       		.uleb128 0x49
 2956 00de 13       		.uleb128 0x13
 2957 00df 11       		.uleb128 0x11
 2958 00e0 01       		.uleb128 0x1
 2959 00e1 12       		.uleb128 0x12
 2960 00e2 06       		.uleb128 0x6
 2961 00e3 40       		.uleb128 0x40
 2962 00e4 18       		.uleb128 0x18
 2963 00e5 9742     		.uleb128 0x2117
 2964 00e7 19       		.uleb128 0x19
 2965 00e8 00       		.byte	0
 2966 00e9 00       		.byte	0
 2967 00ea 0E       		.uleb128 0xe
 2968 00eb 34       		.uleb128 0x34
 2969 00ec 00       		.byte	0
 2970 00ed 03       		.uleb128 0x3
 2971 00ee 0E       		.uleb128 0xe
 2972 00ef 3A       		.uleb128 0x3a
 2973 00f0 0B       		.uleb128 0xb
 2974 00f1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 78


 2975 00f2 0B       		.uleb128 0xb
 2976 00f3 49       		.uleb128 0x49
 2977 00f4 13       		.uleb128 0x13
 2978 00f5 3F       		.uleb128 0x3f
 2979 00f6 19       		.uleb128 0x19
 2980 00f7 02       		.uleb128 0x2
 2981 00f8 18       		.uleb128 0x18
 2982 00f9 00       		.byte	0
 2983 00fa 00       		.byte	0
 2984 00fb 00       		.byte	0
 2985              		.section	.debug_aranges,"",%progbits
 2986 0000 54010000 		.4byte	0x154
 2987 0004 0200     		.2byte	0x2
 2988 0006 00000000 		.4byte	.Ldebug_info0
 2989 000a 04       		.byte	0x4
 2990 000b 00       		.byte	0
 2991 000c 0000     		.2byte	0
 2992 000e 0000     		.2byte	0
 2993 0010 00000000 		.4byte	.LFB2
 2994 0014 3C000000 		.4byte	.LFE2-.LFB2
 2995 0018 00000000 		.4byte	.LFB3
 2996 001c 38000000 		.4byte	.LFE3-.LFB3
 2997 0020 00000000 		.4byte	.LFB4
 2998 0024 24000000 		.4byte	.LFE4-.LFB4
 2999 0028 00000000 		.4byte	.LFB5
 3000 002c 30000000 		.4byte	.LFE5-.LFB5
 3001 0030 00000000 		.4byte	.LFB6
 3002 0034 48000000 		.4byte	.LFE6-.LFB6
 3003 0038 00000000 		.4byte	.LFB7
 3004 003c 48000000 		.4byte	.LFE7-.LFB7
 3005 0040 00000000 		.4byte	.LFB8
 3006 0044 48000000 		.4byte	.LFE8-.LFB8
 3007 0048 00000000 		.4byte	.LFB9
 3008 004c 4C000000 		.4byte	.LFE9-.LFB9
 3009 0050 00000000 		.4byte	.LFB10
 3010 0054 1C000000 		.4byte	.LFE10-.LFB10
 3011 0058 00000000 		.4byte	.LFB11
 3012 005c 48000000 		.4byte	.LFE11-.LFB11
 3013 0060 00000000 		.4byte	.LFB12
 3014 0064 48000000 		.4byte	.LFE12-.LFB12
 3015 0068 00000000 		.4byte	.LFB13
 3016 006c 4C000000 		.4byte	.LFE13-.LFB13
 3017 0070 00000000 		.4byte	.LFB14
 3018 0074 48000000 		.4byte	.LFE14-.LFB14
 3019 0078 00000000 		.4byte	.LFB15
 3020 007c 1C000000 		.4byte	.LFE15-.LFB15
 3021 0080 00000000 		.4byte	.LFB16
 3022 0084 18000000 		.4byte	.LFE16-.LFB16
 3023 0088 00000000 		.4byte	.LFB17
 3024 008c 48000000 		.4byte	.LFE17-.LFB17
 3025 0090 00000000 		.4byte	.LFB18
 3026 0094 1C000000 		.4byte	.LFE18-.LFB18
 3027 0098 00000000 		.4byte	.LFB19
 3028 009c 18000000 		.4byte	.LFE19-.LFB19
 3029 00a0 00000000 		.4byte	.LFB20
 3030 00a4 48000000 		.4byte	.LFE20-.LFB20
 3031 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 79


 3032 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3033 00b0 00000000 		.4byte	.LFB22
 3034 00b4 18000000 		.4byte	.LFE22-.LFB22
 3035 00b8 00000000 		.4byte	.LFB23
 3036 00bc 48000000 		.4byte	.LFE23-.LFB23
 3037 00c0 00000000 		.4byte	.LFB24
 3038 00c4 1C000000 		.4byte	.LFE24-.LFB24
 3039 00c8 00000000 		.4byte	.LFB25
 3040 00cc 18000000 		.4byte	.LFE25-.LFB25
 3041 00d0 00000000 		.4byte	.LFB26
 3042 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3043 00d8 00000000 		.4byte	.LFB27
 3044 00dc 18000000 		.4byte	.LFE27-.LFB27
 3045 00e0 00000000 		.4byte	.LFB28
 3046 00e4 18000000 		.4byte	.LFE28-.LFB28
 3047 00e8 00000000 		.4byte	.LFB29
 3048 00ec 18000000 		.4byte	.LFE29-.LFB29
 3049 00f0 00000000 		.4byte	.LFB30
 3050 00f4 44000000 		.4byte	.LFE30-.LFB30
 3051 00f8 00000000 		.4byte	.LFB31
 3052 00fc 44000000 		.4byte	.LFE31-.LFB31
 3053 0100 00000000 		.4byte	.LFB32
 3054 0104 48000000 		.4byte	.LFE32-.LFB32
 3055 0108 00000000 		.4byte	.LFB33
 3056 010c 44000000 		.4byte	.LFE33-.LFB33
 3057 0110 00000000 		.4byte	.LFB34
 3058 0114 44000000 		.4byte	.LFE34-.LFB34
 3059 0118 00000000 		.4byte	.LFB35
 3060 011c 38000000 		.4byte	.LFE35-.LFB35
 3061 0120 00000000 		.4byte	.LFB36
 3062 0124 20000000 		.4byte	.LFE36-.LFB36
 3063 0128 00000000 		.4byte	.LFB37
 3064 012c 18000000 		.4byte	.LFE37-.LFB37
 3065 0130 00000000 		.4byte	.LFB38
 3066 0134 14000000 		.4byte	.LFE38-.LFB38
 3067 0138 00000000 		.4byte	.LFB39
 3068 013c 14000000 		.4byte	.LFE39-.LFB39
 3069 0140 00000000 		.4byte	.LFB40
 3070 0144 18000000 		.4byte	.LFE40-.LFB40
 3071 0148 00000000 		.4byte	.LFB41
 3072 014c 18000000 		.4byte	.LFE41-.LFB41
 3073 0150 00000000 		.4byte	0
 3074 0154 00000000 		.4byte	0
 3075              		.section	.debug_ranges,"",%progbits
 3076              	.Ldebug_ranges0:
 3077 0000 00000000 		.4byte	.LFB2
 3078 0004 3C000000 		.4byte	.LFE2
 3079 0008 00000000 		.4byte	.LFB3
 3080 000c 38000000 		.4byte	.LFE3
 3081 0010 00000000 		.4byte	.LFB4
 3082 0014 24000000 		.4byte	.LFE4
 3083 0018 00000000 		.4byte	.LFB5
 3084 001c 30000000 		.4byte	.LFE5
 3085 0020 00000000 		.4byte	.LFB6
 3086 0024 48000000 		.4byte	.LFE6
 3087 0028 00000000 		.4byte	.LFB7
 3088 002c 48000000 		.4byte	.LFE7
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 80


 3089 0030 00000000 		.4byte	.LFB8
 3090 0034 48000000 		.4byte	.LFE8
 3091 0038 00000000 		.4byte	.LFB9
 3092 003c 4C000000 		.4byte	.LFE9
 3093 0040 00000000 		.4byte	.LFB10
 3094 0044 1C000000 		.4byte	.LFE10
 3095 0048 00000000 		.4byte	.LFB11
 3096 004c 48000000 		.4byte	.LFE11
 3097 0050 00000000 		.4byte	.LFB12
 3098 0054 48000000 		.4byte	.LFE12
 3099 0058 00000000 		.4byte	.LFB13
 3100 005c 4C000000 		.4byte	.LFE13
 3101 0060 00000000 		.4byte	.LFB14
 3102 0064 48000000 		.4byte	.LFE14
 3103 0068 00000000 		.4byte	.LFB15
 3104 006c 1C000000 		.4byte	.LFE15
 3105 0070 00000000 		.4byte	.LFB16
 3106 0074 18000000 		.4byte	.LFE16
 3107 0078 00000000 		.4byte	.LFB17
 3108 007c 48000000 		.4byte	.LFE17
 3109 0080 00000000 		.4byte	.LFB18
 3110 0084 1C000000 		.4byte	.LFE18
 3111 0088 00000000 		.4byte	.LFB19
 3112 008c 18000000 		.4byte	.LFE19
 3113 0090 00000000 		.4byte	.LFB20
 3114 0094 48000000 		.4byte	.LFE20
 3115 0098 00000000 		.4byte	.LFB21
 3116 009c 1C000000 		.4byte	.LFE21
 3117 00a0 00000000 		.4byte	.LFB22
 3118 00a4 18000000 		.4byte	.LFE22
 3119 00a8 00000000 		.4byte	.LFB23
 3120 00ac 48000000 		.4byte	.LFE23
 3121 00b0 00000000 		.4byte	.LFB24
 3122 00b4 1C000000 		.4byte	.LFE24
 3123 00b8 00000000 		.4byte	.LFB25
 3124 00bc 18000000 		.4byte	.LFE25
 3125 00c0 00000000 		.4byte	.LFB26
 3126 00c4 1C000000 		.4byte	.LFE26
 3127 00c8 00000000 		.4byte	.LFB27
 3128 00cc 18000000 		.4byte	.LFE27
 3129 00d0 00000000 		.4byte	.LFB28
 3130 00d4 18000000 		.4byte	.LFE28
 3131 00d8 00000000 		.4byte	.LFB29
 3132 00dc 18000000 		.4byte	.LFE29
 3133 00e0 00000000 		.4byte	.LFB30
 3134 00e4 44000000 		.4byte	.LFE30
 3135 00e8 00000000 		.4byte	.LFB31
 3136 00ec 44000000 		.4byte	.LFE31
 3137 00f0 00000000 		.4byte	.LFB32
 3138 00f4 48000000 		.4byte	.LFE32
 3139 00f8 00000000 		.4byte	.LFB33
 3140 00fc 44000000 		.4byte	.LFE33
 3141 0100 00000000 		.4byte	.LFB34
 3142 0104 44000000 		.4byte	.LFE34
 3143 0108 00000000 		.4byte	.LFB35
 3144 010c 38000000 		.4byte	.LFE35
 3145 0110 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 81


 3146 0114 20000000 		.4byte	.LFE36
 3147 0118 00000000 		.4byte	.LFB37
 3148 011c 18000000 		.4byte	.LFE37
 3149 0120 00000000 		.4byte	.LFB38
 3150 0124 14000000 		.4byte	.LFE38
 3151 0128 00000000 		.4byte	.LFB39
 3152 012c 14000000 		.4byte	.LFE39
 3153 0130 00000000 		.4byte	.LFB40
 3154 0134 18000000 		.4byte	.LFE40
 3155 0138 00000000 		.4byte	.LFB41
 3156 013c 18000000 		.4byte	.LFE41
 3157 0140 00000000 		.4byte	0
 3158 0144 00000000 		.4byte	0
 3159              		.section	.debug_line,"",%progbits
 3160              	.Ldebug_line0:
 3161 0000 6A030000 		.section	.debug_str,"MS",%progbits,1
 3161      02004200 
 3161      00000201 
 3161      FB0E0D00 
 3161      01010101 
 3162              	.LASF33:
 3163 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 3163      725F5365 
 3163      7450574D 
 3163      53746F70 
 3163      4F6E4B69 
 3164              	.LASF40:
 3165 0017 636F756E 		.ascii	"count\000"
 3165      7400
 3166              	.LASF73:
 3167 001d 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 3167      725F4765 
 3167      74496E74 
 3167      65727275 
 3167      7074536F 
 3168              	.LASF78:
 3169 0036 433A5C55 		.ascii	"C:\\Users\\Nick\\Documents\\PSoC Creator\\FSM.cywrk"
 3169      73657273 
 3169      5C4E6963 
 3169      6B5C446F 
 3169      63756D65 
 3170 0064 5C46534D 		.ascii	"\\FSM\\FSM.cydsn\000"
 3170      5C46534D 
 3170      2E637964 
 3170      736E00
 3171              	.LASF43:
 3172 0073 54696D65 		.ascii	"Timer_WritePeriod\000"
 3172      725F5772 
 3172      69746550 
 3172      6572696F 
 3172      6400
 3173              	.LASF75:
 3174 0085 54696D65 		.ascii	"Timer_SetInterrupt\000"
 3174      725F5365 
 3174      74496E74 
 3174      65727275 
 3174      707400
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 82


 3175              	.LASF44:
 3176 0098 70657269 		.ascii	"period\000"
 3176      6F6400
 3177              	.LASF21:
 3178 009f 54696D65 		.ascii	"Timer_SetMode\000"
 3178      725F5365 
 3178      744D6F64 
 3178      6500
 3179              	.LASF79:
 3180 00ad 54696D65 		.ascii	"Timer_initVar\000"
 3180      725F696E 
 3180      69745661 
 3180      7200
 3181              	.LASF7:
 3182 00bb 6C6F6E67 		.ascii	"long long unsigned int\000"
 3182      206C6F6E 
 3182      6720756E 
 3182      7369676E 
 3182      65642069 
 3183              	.LASF35:
 3184 00d2 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 3184      725F5365 
 3184      7450574D 
 3184      44656164 
 3184      54696D65 
 3185              	.LASF31:
 3186 00e7 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 3186      725F5365 
 3186      7450574D 
 3186      53796E63 
 3186      4B696C6C 
 3187              	.LASF24:
 3188 00fc 71644D6F 		.ascii	"qdMode\000"
 3188      646500
 3189              	.LASF6:
 3190 0103 6C6F6E67 		.ascii	"long long int\000"
 3190      206C6F6E 
 3190      6720696E 
 3190      7400
 3191              	.LASF0:
 3192 0111 7369676E 		.ascii	"signed char\000"
 3192      65642063 
 3192      68617200 
 3193              	.LASF22:
 3194 011d 54696D65 		.ascii	"Timer_SetQDMode\000"
 3194      725F5365 
 3194      7451444D 
 3194      6F646500 
 3195              	.LASF66:
 3196 012d 54696D65 		.ascii	"Timer_SetCountMode\000"
 3196      725F5365 
 3196      74436F75 
 3196      6E744D6F 
 3196      646500
 3197              	.LASF54:
 3198 0140 636F6D70 		.ascii	"compare\000"
 3198      61726500 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 83


 3199              	.LASF4:
 3200 0148 6C6F6E67 		.ascii	"long int\000"
 3200      20696E74 
 3200      00
 3201              	.LASF59:
 3202 0151 54696D65 		.ascii	"Timer_ReadCapture\000"
 3202      725F5265 
 3202      61644361 
 3202      70747572 
 3202      6500
 3203              	.LASF67:
 3204 0163 54696D65 		.ascii	"Timer_TriggerCommand\000"
 3204      725F5472 
 3204      69676765 
 3204      72436F6D 
 3204      6D616E64 
 3205              	.LASF9:
 3206 0178 75696E74 		.ascii	"uint8\000"
 3206      3800
 3207              	.LASF12:
 3208 017e 646F7562 		.ascii	"double\000"
 3208      6C6500
 3209              	.LASF70:
 3210 0185 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 3210      725F5365 
 3210      74496E74 
 3210      65727275 
 3210      70744D6F 
 3211              	.LASF10:
 3212 019c 75696E74 		.ascii	"uint32\000"
 3212      333200
 3213              	.LASF53:
 3214 01a3 54696D65 		.ascii	"Timer_WriteCompare\000"
 3214      725F5772 
 3214      69746543 
 3214      6F6D7061 
 3214      726500
 3215              	.LASF62:
 3216 01b6 74726967 		.ascii	"triggerMode\000"
 3216      6765724D 
 3216      6F646500 
 3217              	.LASF38:
 3218 01c2 6D61736B 		.ascii	"mask\000"
 3218      00
 3219              	.LASF55:
 3220 01c7 54696D65 		.ascii	"Timer_ReadCompare\000"
 3220      725F5265 
 3220      6164436F 
 3220      6D706172 
 3220      6500
 3221              	.LASF36:
 3222 01d9 64656164 		.ascii	"deadTime\000"
 3222      54696D65 
 3222      00
 3223              	.LASF56:
 3224 01e2 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 3224      725F5772 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 84


 3224      69746543 
 3224      6F6D7061 
 3224      72654275 
 3225              	.LASF8:
 3226 01f8 756E7369 		.ascii	"unsigned int\000"
 3226      676E6564 
 3226      20696E74 
 3226      00
 3227              	.LASF17:
 3228 0205 54696D65 		.ascii	"Timer_Start\000"
 3228      725F5374 
 3228      61727400 
 3229              	.LASF68:
 3230 0211 636F6D6D 		.ascii	"command\000"
 3230      616E6400 
 3231              	.LASF5:
 3232 0219 6C6F6E67 		.ascii	"long unsigned int\000"
 3232      20756E73 
 3232      69676E65 
 3232      6420696E 
 3232      7400
 3233              	.LASF30:
 3234 022b 6D6F6465 		.ascii	"modeMask\000"
 3234      4D61736B 
 3234      00
 3235              	.LASF18:
 3236 0234 54696D65 		.ascii	"Timer_Enable\000"
 3236      725F456E 
 3236      61626C65 
 3236      00
 3237              	.LASF3:
 3238 0241 73686F72 		.ascii	"short unsigned int\000"
 3238      7420756E 
 3238      7369676E 
 3238      65642069 
 3238      6E7400
 3239              	.LASF39:
 3240 0254 54696D65 		.ascii	"Timer_WriteCounter\000"
 3240      725F5772 
 3240      69746543 
 3240      6F756E74 
 3240      657200
 3241              	.LASF45:
 3242 0267 54696D65 		.ascii	"Timer_ReadCounter\000"
 3242      725F5265 
 3242      6164436F 
 3242      756E7465 
 3242      7200
 3243              	.LASF19:
 3244 0279 54696D65 		.ascii	"Timer_Stop\000"
 3244      725F5374 
 3244      6F7000
 3245              	.LASF28:
 3246 0284 6F6E6553 		.ascii	"oneShotEnable\000"
 3246      686F7445 
 3246      6E61626C 
 3246      6500
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 85


 3247              	.LASF72:
 3248 0292 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 3248      725F4765 
 3248      74496E74 
 3248      65727275 
 3248      7074536F 
 3249              	.LASF14:
 3250 02b1 72656733 		.ascii	"reg32\000"
 3250      3200
 3251              	.LASF47:
 3252 02b7 54696D65 		.ascii	"Timer_SetCompareSwap\000"
 3252      725F5365 
 3252      74436F6D 
 3252      70617265 
 3252      53776170 
 3253              	.LASF15:
 3254 02cc 73697A65 		.ascii	"sizetype\000"
 3254      74797065 
 3254      00
 3255              	.LASF49:
 3256 02d5 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 3256      725F5772 
 3256      69746550 
 3256      6572696F 
 3256      64427566 
 3257              	.LASF32:
 3258 02ea 73796E63 		.ascii	"syncKillEnable\000"
 3258      4B696C6C 
 3258      456E6162 
 3258      6C6500
 3259              	.LASF37:
 3260 02f9 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 3260      725F5365 
 3260      7450574D 
 3260      496E7665 
 3260      727400
 3261              	.LASF51:
 3262 030c 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 3262      725F5265 
 3262      61645065 
 3262      72696F64 
 3262      42756600 
 3263              	.LASF64:
 3264 0320 54696D65 		.ascii	"Timer_SetStartMode\000"
 3264      725F5365 
 3264      74537461 
 3264      72744D6F 
 3264      646500
 3265              	.LASF11:
 3266 0333 666C6F61 		.ascii	"float\000"
 3266      7400
 3267              	.LASF26:
 3268 0339 70726573 		.ascii	"prescaler\000"
 3268      63616C65 
 3268      7200
 3269              	.LASF65:
 3270 0343 54696D65 		.ascii	"Timer_SetStopMode\000"
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 86


 3270      725F5365 
 3270      7453746F 
 3270      704D6F64 
 3270      6500
 3271              	.LASF52:
 3272 0355 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 3272      725F5365 
 3272      74506572 
 3272      696F6453 
 3272      77617000 
 3273              	.LASF60:
 3274 0369 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 3274      725F5265 
 3274      61644361 
 3274      70747572 
 3274      65427566 
 3275              	.LASF69:
 3276 037e 54696D65 		.ascii	"Timer_ReadStatus\000"
 3276      725F5265 
 3276      61645374 
 3276      61747573 
 3276      00
 3277              	.LASF1:
 3278 038f 756E7369 		.ascii	"unsigned char\000"
 3278      676E6564 
 3278      20636861 
 3278      7200
 3279              	.LASF34:
 3280 039d 73746F70 		.ascii	"stopOnKillEnable\000"
 3280      4F6E4B69 
 3280      6C6C456E 
 3280      61626C65 
 3280      00
 3281              	.LASF2:
 3282 03ae 73686F72 		.ascii	"short int\000"
 3282      7420696E 
 3282      7400
 3283              	.LASF71:
 3284 03b8 696E7465 		.ascii	"interruptMask\000"
 3284      72727570 
 3284      744D6173 
 3284      6B00
 3285              	.LASF25:
 3286 03c6 54696D65 		.ascii	"Timer_SetPrescaler\000"
 3286      725F5365 
 3286      74507265 
 3286      7363616C 
 3286      657200
 3287              	.LASF16:
 3288 03d9 54696D65 		.ascii	"Timer_Init\000"
 3288      725F496E 
 3288      697400
 3289              	.LASF41:
 3290 03e4 54696D65 		.ascii	"Timer_SetCounterMode\000"
 3290      725F5365 
 3290      74436F75 
 3290      6E746572 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 87


 3290      4D6F6465 
 3291              	.LASF13:
 3292 03f9 63686172 		.ascii	"char\000"
 3292      00
 3293              	.LASF23:
 3294 03fe 6D6F6465 		.ascii	"mode\000"
 3294      00
 3295              	.LASF63:
 3296 0403 54696D65 		.ascii	"Timer_SetReloadMode\000"
 3296      725F5365 
 3296      7452656C 
 3296      6F61644D 
 3296      6F646500 
 3297              	.LASF42:
 3298 0417 636F756E 		.ascii	"counterMode\000"
 3298      7465724D 
 3298      6F646500 
 3299              	.LASF48:
 3300 0423 73776170 		.ascii	"swapEnable\000"
 3300      456E6162 
 3300      6C6500
 3301              	.LASF46:
 3302 042e 54696D65 		.ascii	"Timer_ReadPeriod\000"
 3302      725F5265 
 3302      61645065 
 3302      72696F64 
 3302      00
 3303              	.LASF57:
 3304 043f 636F6D70 		.ascii	"compareBuf\000"
 3304      61726542 
 3304      756600
 3305              	.LASF77:
 3306 044a 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer.c\000"
 3306      72617465 
 3306      645F536F 
 3306      75726365 
 3306      5C50536F 
 3307              	.LASF20:
 3308 0469 656E6162 		.ascii	"enableInterrupts\000"
 3308      6C65496E 
 3308      74657272 
 3308      75707473 
 3308      00
 3309              	.LASF61:
 3310 047a 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 3310      725F5365 
 3310      74436170 
 3310      74757265 
 3310      4D6F6465 
 3311              	.LASF27:
 3312 048f 54696D65 		.ascii	"Timer_SetOneShot\000"
 3312      725F5365 
 3312      744F6E65 
 3312      53686F74 
 3312      00
 3313              	.LASF74:
 3314 04a0 54696D65 		.ascii	"Timer_ClearInterrupt\000"
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cczVXaxC.s 			page 88


 3314      725F436C 
 3314      65617249 
 3314      6E746572 
 3314      72757074 
 3315              	.LASF76:
 3316 04b5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3316      4320342E 
 3316      392E3320 
 3316      32303135 
 3316      30333033 
 3317 04e8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3317      20726576 
 3317      6973696F 
 3317      6E203232 
 3317      31323230 
 3318 051b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3318      66756E63 
 3318      74696F6E 
 3318      2D736563 
 3318      74696F6E 
 3319              	.LASF50:
 3320 0543 70657269 		.ascii	"periodBuf\000"
 3320      6F644275 
 3320      6600
 3321              	.LASF29:
 3322 054d 54696D65 		.ascii	"Timer_SetPWMMode\000"
 3322      725F5365 
 3322      7450574D 
 3322      4D6F6465 
 3322      00
 3323              	.LASF58:
 3324 055e 54696D65 		.ascii	"Timer_ReadCompareBuf\000"
 3324      725F5265 
 3324      6164436F 
 3324      6D706172 
 3324      65427566 
 3325              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
